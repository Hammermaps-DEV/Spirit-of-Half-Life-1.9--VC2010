// Half-Life game definition file (.fgd) 
// version 3.0.0.1
// for Worldcraft 3.3 and above, and Half-Life 1.0.0.9 and above
// updated by Chris Bokitch
// autolycus@valvesoftware.com
// http://www.valve-erc.com/

// Updated by Mutant (mutant66@hotmail.com) to make it compatible 
// with Valve Hammer Editor version 3.5. When you (if you) e-mail me 
// please put 'Mutant' in the subject line (without quotes) in order 
// to bypass my spam filter. Thanks.

// Updated by Sniper to include the Sven Co-op 2.1 Entities
// sniper@rochester.rr.com
// ->monster_pitdrone, monster_shocktrooper, monster_shockroach
// ->weapon_uziakimbo, weapon_pipewrench, removed env_sentence


// Updated by Sniper to include the Sven Co-op 2.0 Final Entities
// sniper@rochester.rr.com
// ->monster_gonome, monster_zombie_barney, monster_zombie_soldier
// ->monster_assassin_repel, monster_male_assassin, monster_otis,
//   monster_robogrunt, monster_robogrunt_repel


// Modified to include new Sven Co-op v2.0 Beta entities by Another1


//
// worldspawn
//

@SolidClass = worldspawn : "World entity"
[
	message(string) : "Map Description / Title"
	skyname(string) : "environment map (cl_skyname)"
	sounds(integer) : "CD track to play" : 1
	light(integer) : "Default light level"
	WaveHeight(string) : "Default Wave Height"
	MaxRange(string) : "Max viewable distance" : "4096"
	chaptertitle(string) : "Chapter Title Message"
	startdark(choices) : "Level Fade In" : 0 =
	[	
		0 : "No"
		1 : "Yes"
	]
	gametitle(choices) : "Display game title" : 0 = 
	[	
		0 : "No"
		1 : "Yes"
	]
	newunit(choices) : "New Level Unit" : 0 = 
	[
		0 : "No, keep current"
		1 : "Yes, clear previous levels"
	]
	mapteams(string) : "Map Team List"
	defaultteam(choices) : "Default Team" : 0 = 
	[
		0 : "Fewest Players"
		1 : "First Team"
	]
]

//
// BaseClasses
//

@BaseClass = ZHLT
[
	zhlt_lightflags(choices) : "ZHLT Lightflags" : 0 =
	[
		0 : "Default"
		1 : "Embedded Fix"
		2 : "Opaque (blocks light)"
		3 : "Opaque + Embedded fix"
		6 : "Opaque + Concave Fix"
	]
	light_origin(string) : "Light Origin Target"
]

@BaseClass = ZHLT_point
[
	_fade(string) : "ZHLT Fade" : "1.0"
	_falloff(choices) : "ZHLT Falloff" : 0 =
	[
		0 : "Default"
		1 : "Inverse Linear"
		2 : "Inverse Square"
	]
]

@BaseClass = Appearflags
[
	spawnflags(Flags) =
	[
		2048 : "Not in Deathmatch" : 0
	]
]

@BaseClass = Angles
[
	angles(string) : "Pitch Yaw Roll (Y Z X)" : "0 0 0"
]

@BaseClass size(0 0 0, 32 32 32) color(80 0 200) base(Appearflags) = Ammo []

@BaseClass = Targetname 
[ 
	targetname(target_source) : "Name"
]
@BaseClass = Target 
[ 
	target(target_destination) : "Target" 
]
@BaseClass size(-16 -16 0, 16 16 32) color(0 0 200) base(Targetname, Appearflags, Angles) = Weapon 
[
	wpn_v_model(String) : "Custom V_Model" : ""
	wpn_w_model(String) : "Custom W_Model" : ""
	wpn_p_model(String) : "Custom P_Model" : ""
]
@BaseClass = Global 
[ 
	globalname(string) : "Global Entity Name" 
]

@BaseClass base(Target) = Targetx 
[
	delay(string) : "Delay before trigger" : "0"
	killtarget(target_destination) : "KillTarget"
]

@BaseClass = RenderFxChoices
[
	renderfx(choices) :"Render FX" : 0 =
	[
		0: "Normal"
		1: "Slow Pulse"
		2: "Fast Pulse"
		3: "Slow Wide Pulse"
		4: "Fast Wide Pulse"
		9: "Slow Strobe"
		10: "Fast Strobe"
		11: "Faster Strobe"
		12: "Slow Flicker"
		13: "Fast Flicker"
		5: "Slow Fade Away"
		6: "Fast Fade Away"
		7: "Slow Become Solid"
		8: "Fast Become Solid"
		14: "Constant Glow"
		15: "Distort"
		16: "Hologram (Distort + fade)"
		17: "Dead Player (DONT USE!)"
		18: "Explode (Garg Like)"
		19: "Glow Shell"
		20: "ClampMinScale (Sprites)"
	]
]

@BaseClass base(RenderFxChoices) = RenderFields 
[
	rendermode(choices) : "Render Mode" : 0 =
	[
		0: "Normal"
		1: "Color"
		2: "Texture"
		3: "Glow"
		4: "Solid"
		5: "Additive"
	]
	renderamt(integer) : "FX Amount (1 - 255)"
	rendercolor(color255) : "FX Color (R G B)" : "0 0 0"
]

@BaseClass base(Target, Targetname, Appearflags, Angles) size(-16 -16 -36, 16 16 36) color(0 255 0) = PlayerClass 
[
	spawnflags(Flags) = 
	[
		2 : "Start Off"		: 0
	]
]

@BaseClass base(Target, Targetname, RenderFields, Angles) color(0 200 200) = Monster 
[
	TriggerTarget(String) : "TriggerTarget"
      	TriggerCondition(Choices) : "Trigger Condition" : 0 =
	[
		0 : "No Trigger"
		1 : "See Player, Mad at Player"
		2 : "Take Damage"
		3 : "50% Health Remaining"
		4 : "Death"
		7 : "Hear World"
		8 : "Hear Player"
		9 : "Hear Combat"
		10: "See Player Unconditional"
		11: "See Player, Not In Combat"
	]
	spawnflags(Flags) = 
	[
		1 : "WaitTillSeen" 	: 0
		2 : "Gag"		: 0
		4 : "MonsterClip"	: 0
		16: "Prisoner"		: 0
		128: "WaitForScript" 	: 0
		256: "Pre-Disaster" 	: 0
		512: "Fade Corpse"	: 0
	]
	
	is_player_ally(Choices) : "Is Player Ally" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	netname(string) : "In-game Name" : "Monster"
	health(integer) : "Custom Health" : 0
	model(studio) : "Custom Model"
]

@BaseClass = TalkMonster
[
	UseSentence(String) : "Use Sentence"
	UnUseSentence(String) : "Un-Use Sentence"
]

@BaseClass base(Targetname, Angles) size(-16 -16 -16, 16 16 16) = gibshooterbase
[
	// how many pieces to create
	m_iGibs(integer) : "Number of Gibs" : 3
	
	// delay (in seconds) between shots. If 0, all gibs shoot at once.
	delay(string) : "Delay between shots" : "0"

	// how fast the gibs are fired
	m_flVelocity(integer) : "Gib Velocity" : 200

	// Course variance
	m_flVariance(string) : "Course Variance" : "0.15"

	// Time in seconds for gibs to live +/- 5%
	m_flGibLife(string) : "Gib Life" : "4"

	spawnflags(Flags) = 
	[
		1 : "Repeatable" 	: 0
	]
]

@BaseClass = Light 
[
	_light(color255) : "Brightness" : "255 255 128 200"
      style(Choices) : "Appearance" : 0 =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
	]
	pattern(string) : "Custom Appearance"
]

@BaseClass base(Targetname,Global) = Breakable
[
	target(target_destination) : "Target on break"
	health(integer) : "Strength" : 1
	material(choices) :"Material type" : 0 =
	[
		0: "Glass"
		1: "Wood"
		2: "Metal"
		3: "Flesh"
		4: "Cinder Block"  
		5: "Ceiling Tile"
		6: "Computer"
		7: "Unbreakable Glass"
		8: "Rocks"
	]
	explosion(choices) : "Gibs Direction" : 0 =
	[
		0: "Random"
		1: "Relative to Attack"
	]
	delay(string) : "Delay before fire" : "0"
	gibmodel(studio) : "Gib Model" : ""
	spawnobject(choices) : "Spawn On Break" : 0 =
	[
		0: "Nothing"
		1: "Battery"
		2: "Healthkit"
		3: "9mm Handgun"
		4: "9mm Clip"
		5: "Machine Gun"
		6: "Machine Gun Clip"
		7: "Machine Gun Grenades"
		8: "Shotgun"
		9: "Shotgun Shells"
		10: "Crossbow"
		11: "Crossbow Bolts"
		12: "357"
		13: "357 clip"
		14: "RPG"
		15: "RPG Clip"
		16: "Gauss clip"
		17: "Hand grenade"
		18: "Tripmine"
		19: "Satchel Charge"
		20: "Snark"
		21: "Hornet Gun"
	]
	explodemagnitude(integer) : "Explode Magnitude (0=none)" : 0
]

@BaseClass base(Appearflags, Targetname, RenderFields, Global, Angles) = Door
[
	killtarget(target_destination) : "KillTarget"
	speed(integer) : "Speed" : 100
	master(string) : "Master" 
	movesnd(choices) : "Move Sound" : 0 = 
	[
		0: "No Sound"
		1: "Servo (Sliding)"
		2: "Pneumatic (Sliding)"
		3: "Pneumatic (Rolling)"
		4: "Vacuum"
		5: "Power Hydraulic"
		6: "Large Rollers"
		7: "Track Door"
		8: "Snappy Metal Door"
		9: "Squeaky 1"
		10: "Squeaky 2"
	]
	stopsnd(choices) : "Stop Sound" : 0 = 
	[
		0: "No Sound"
		1: "Clang with brake"
		2: "Clang reverb"
		3: "Ratchet Stop"
		4: "Chunk"
		5: "Light airbrake"
		6: "Metal Slide Stop"
		7: "Metal Lock Stop"
		8: "Snappy Metal Stop"
	]
	wait(integer) : "delay before close, -1 stay open " : 4
	lip(integer) : "Lip"
	dmg(integer) : "Damage inflicted when blocked" : 0
	message(string) : "Message if triggered"
	target(target_destination) : "Target"
	delay(integer) : "Delay before fire" 
	netname(string) : "Fire on Close"
	health(integer) : "Health (shoot open)" : 0
	spawnflags(flags) =
	[
		1 : "Starts Open" : 0
		4 : "Don't link" : 0
		8: "Passable" : 0
	    	32: "Toggle" : 0
		256:"Use Only" : 0
		512: "Monsters Can't" : 0
	]
	// NOTE: must be duplicated in BUTTON
	locked_sound(choices) : "Locked Sound" : 0 = 
	[
		0: "None"
		2: "Access Denied"
		8: "Small zap"
		10: "Buzz"
		11: "Buzz Off"
		12: "Latch Locked"
	]
	unlocked_sound(choices) : "Unlocked Sound" : 0 = 
	[
		0: "None"
		1: "Big zap & Warmup"
		3: "Access Granted"
		4: "Quick Combolock"
		5: "Power Deadbolt 1"
		6: "Power Deadbolt 2"
		7: "Plunger"
		8: "Small zap"
		9: "Keycard Sound"
		10: "Buzz"
		13: "Latch Unlocked"
	]
	locked_sentence(choices) : "Locked Sentence" : 0 = 
	[
		0: "None"
		1: "Gen. Access Denied"
		2: "Security Lockout"
		3: "Blast Door"
		4: "Fire Door"
		5: "Chemical Door"
		6: "Radiation Door"
		7: "Gen. Containment"
		8: "Maintenance Door"
		9: "Broken Shut Door"
	]
	unlocked_sentence(choices) : "Unlocked Sentence" : 0 = 
	[
		0: "None"
		1: "Gen. Access Granted"
		2: "Security Disengaged"
		3: "Blast Door"
		4: "Fire Door"
		5: "Chemical Door"
		6: "Radiation Door"
		7: "Gen. Containment"
		8: "Maintenance area"
	]	
	_minlight(string) : "Minimum light level"
]



@BaseClass base(Targetname, Target, RenderFields, Global, Angles) = BaseTank
[
	spawnflags(flags) =
	[
		1 : "Active" : 0
		16: "Only Direct" : 0
		32: "Controllable" : 0
		512: "Kill Monsters" : 0
	]

	// Mainly for use with 1009 team settings (game_team_master)
	master(string) : "(Team) Master" 

	yawrate(string) : "Yaw rate" : "30"
	yawrange(string) : "Yaw range" : "180"
	yawtolerance(string) : "Yaw tolerance" : "15"
	pitchrate(string) : "Pitch rate" : "0"
	pitchrange(string) : "Pitch range" : "0"
	pitchtolerance(string) : "Pitch tolerance" : "5"
	barrel(string) : "Barrel Length" : "0"
	barrely(string) : "Barrel Horizontal" : "0"
	barrelz(string) : "Barrel Vertical" : "0"
	spritesmoke(string) : "Smoke Sprite" : ""
	spriteflash(string) : "Flash Sprite" : ""
	spritescale(string) : "Sprite scale" : "1"
	rotatesound(sound) : "Rotate Sound" : ""
	firerate(string) : "Rate of Fire" : "1"
	bullet_damage(string) : "Damage Per Bullet" : "0"
	persistence(string) : "Firing persistence" : "1"
	firespread(choices) : "Bullet accuracy" : 0 =
	[
		0: "Perfect Shot"
		1: "Small cone"
		2: "Medium cone"
		3: "Large cone"
		4: "Extra-large cone"
	]
	minRange(string) : "Minmum target range" : "0"
	maxRange(string) : "Maximum target range" : "0"
	_minlight(string) : "Minimum light level"
	
	relation_player(choices) : "R Player" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]


	relation_none(choices) : "R Unknown" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_machine(choices) : "R Machine" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_human_passive(choices) : "R Human Passive" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_human_militar(choices) : "R Human Military" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_alien_militar(choices) : "R Alien Military" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_alien_passive(choices) : "R Alien Passive" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_alien_monster(choices) : "R Alien Monster" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_alien_prey(choices) : "R Alien Prey" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_alien_predator(choices) : "R Alien Predator" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_insect(choices) : "R Insect" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_player_ally(choices) : "R Player Ally" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_player_bioweapon(choices) : "R Player BioWeapon" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]

	relation_monster_bioweapon(choices) : "R Monster BioWeapon" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]
	relation_machine(choices) : "R Machine" : 0 = 
	[
		-2: "Ally"
		-1: "Friend"
		0: "No Relation"
		1: "Dislike"
		2: "Hate"
		3: "Nemesis"
	]
]


@BaseClass = PlatSounds 
[
	movesnd(choices) : "Move Sound" : 0 = 
	[
		0: "No Sound"
		1: "big elev 1"
		2: "big elev 2"
		3: "tech elev 1"
		4: "tech elev 2"
		5: "tech elev 3"
		6: "freight elev 1"
		7: "freight elev 2"
		8: "heavy elev"
		9: "rack elev"
		10: "rail elev"
		11: "squeek elev"
		12: "odd elev 1"
		13: "odd elev 2"
	]
	stopsnd(choices) : "Stop Sound" : 0 = 
	[
		0: "No Sound"
		1: "big elev stop1"
		2: "big elev stop2"
		3: "freight elev stop"
		4: "heavy elev stop"
		5: "rack stop"
		6: "rail stop"
		7: "squeek stop"
		8: "quick stop"
	]
	volume(string) : "Sound Volume 0.0 - 1.0" : "0.85"
]

@BaseClass base(Targetname, RenderFields, Global, PlatSounds) = Trackchange
[
	height(integer) : "Travel altitude" : 0
	spawnflags(flags) =
	[
		1: "Auto Activate train" : 0
		2: "Relink track" : 0
		8: "Start at Bottom" : 0
		16: "Rotate Only" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	rotation(integer) : "Spin amount" : 0
	train(target_destination) : "Train to switch"
	toptrack(target_destination) : "Top track"
	bottomtrack(target_destination) : "Bottom track"
	speed(integer) : "Move/Rotate speed" : 0
]

@BaseClass base(Target, Targetname) = Trigger
[
	killtarget(target_destination) : "Kill target"
	netname(target_destination) : "Target Path"
	master(string) : "Master" 
	sounds(choices) : "Sound style" : 0 =
	[
		0 : "No Sound"
	]
	delay(string) : "Delay before trigger" : "0"
	message(string) : "Message (set sound too!)"
	spawnflags(flags) = 
	[
		1: "Monsters" : 0
		2: "No Clients" : 0
		4: "Pushables": 0
	]
]

//
// Entities
//

@PointClass base(Targetname, Targetx, Angles) size(-16 -16 0, 16 16 72) color(255 0 255) = aiscripted_sequence : "AI Scripted Sequence"
[
	m_iszEntity(string) : "Target Monster"
	m_iszPlay(string) : "Action Animation" : ""
	m_flRadius(integer) : "Search Radius" : 512
	m_flRepeat(integer) : "Repeat Rate ms" : 0
	m_fMoveTo(Choices) : "Move to Position" : 0 =
	[
		0 : "No"
		1 : "Walk"
		2 : "Run"
		4 : "Instantaneous"
		5 : "No - Turn to Face"
	]
	m_iFinishSchedule(Choices) : "AI Schedule when done" : 0 =
	[
		0 : "Default AI"
		1 : "Ambush"
	]
	spawnflags(Flags) = 
	[
		4 : "Repeatable"		: 0
		8 : "Leave Corpse"	: 0
	]
]

@PointClass iconsprite("sprites/speaker.spr") base(Targetname) = ambient_generic : "Universal Ambient"
[
	message(sound) : "WAV Name"
	health(integer) : "Volume (10 = loudest)" : 10
	preset(choices) :"Dynamic Presets" : 0 =
	[
		0: "None"
		1: "Huge Machine"
		2: "Big Machine"
		3: "Machine"
		4: "Slow Fade in"  
		5: "Fade in"
		6: "Quick Fade in"
		7: "Slow Pulse"
		8: "Pulse"
		9: "Quick pulse"
		10: "Slow Oscillator"
		11: "Oscillator"
		12: "Quick Oscillator"
		13: "Grunge pitch"
		14: "Very low pitch"
		15: "Low pitch"
		16: "High pitch"
		17: "Very high pitch"
		18: "Screaming pitch"
		19: "Oscillate spinup/down"
		20: "Pulse spinup/down"
		21: "Random pitch"
		22: "Random pitch fast"
		23: "Incremental Spinup"
		24: "Alien"
		25: "Bizzare"
		26: "Planet X"
		27: "Haunted"
	]
	volstart(integer) : "Start Volume" : 0
	fadein(integer) : "Fade in time (0-100)" : 0
	fadeout(integer) : "Fade out time (0-100)" : 0
	pitch(integer) : "Pitch (> 100 = higher)" : 100
	pitchstart(integer) : "Start Pitch" : 100
	spinup(integer) : "Spin up time (0-100)" : 0
	spindown(integer) : "Spin down time (0-100)" : 0
	lfotype(integer) : "LFO type 0)off 1)sqr 2)tri 3)rnd" : 0
	lforate(integer) : "LFO rate (0-1000)" : 0
	lfomodpitch(integer) : "LFO mod pitch (0-100)" : 0
	lfomodvol(integer) : "LFO mod vol (0-100)" : 0
	cspinup(integer) : "Incremental spinup count" : 0
	spawnflags(flags) =
	[
		1 : "Play Everywhere" : 0
		2 : "Small Radius" : 0
		4 : "Medium Radius" : 1
		8 : "Large Radius" : 0
		16 : "Start Silent":0
		32 : "Is NOT Looped":0
	]
]

//
// ammo
//


@PointClass base(Weapon, Targetx) studio("models/w_9mmclip.mdl") = ammo_9mmclip : "9mm Pistol Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_9mmarclip.mdl") = ammo_9mmAR : "9mm Assault Rifle Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_chainammo.mdl") = ammo_9mmbox : "box of 200 9mm shells" []
@PointClass base(Weapon, Targetx) studio("models/w_argrenade.mdl") = ammo_ARgrenades : "Assault Grenades" []
@PointClass base(Weapon, Targetx) studio("models/w_shotbox.mdl") = ammo_buckshot : "Shotgun Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_357ammobox.mdl") = ammo_357 : "357 Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_rpgammo.mdl") = ammo_rpgclip : "RPG Ammo" 
[
	sequence(choices) : "Position" : 0 =
	[
		0 : "Uncapped"
		1 : "Capped"
	]
]
@PointClass base(Weapon, Targetx) studio("models/w_gaussammo.mdl") = ammo_gaussclip : "Gauss Gun Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_crossbow_clip.mdl") = ammo_crossbow : "Crossbow Ammo" []

@SolidClass base(Target, ZHLT) = button_target : "Target Button"
[
	spawnflags(flags) =
	[
		1: "Use Activates" : 1
		2: "Start On" : 0
	]
	master(string) : "Master" 
	renderfx(choices) :"Render FX" : 0 =
	[
		0: "Normal"
		1: "Slow Pulse"
		2: "Fast Pulse"
		3: "Slow Wide Pulse"
		4: "Fast Wide Pulse"
		9: "Slow Strobe"
		10: "Fast Strobe"
		11: "Faster Strobe"
		12: "Slow Flicker"
		13: "Fast Flicker"
		5: "Slow Fade Away"
		6: "Fast Fade Away"
		7: "Slow Become Solid"
		8: "Fast Become Solid"
		14: "Constant Glow"
		15: "Distort"
		16: "Hologram (Distort + fade)"
	]
	rendermode(choices) : "Render Mode" : 0 =
	[
		0: "Normal"
		1: "Color"
		2: "Texture"
		3: "Glow"
		4: "Solid"
		5: "Additive"
	]
	renderamt(integer) : "FX Amount (1 - 255)"
	rendercolor(color255) : "FX Color (R G B)" : "0 0 0"
]


//
// cyclers
//

@PointClass base(Targetname, Angles) size(-16 -16 0, 16 16 72) = cycler : "Monster Cycler" 
[
	model(studio) : "Model"
	renderfx(choices) :"Render FX" : 0 =
	[
		0: "Normal"
		1: "Slow Pulse"
		2: "Fast Pulse"
		3: "Slow Wide Pulse"
		4: "Fast Wide Pulse"
		9: "Slow Strobe"
		10: "Fast Strobe"
		11: "Faster Strobe"
		12: "Slow Flicker"
		13: "Fast Flicker"
		5: "Slow Fade Away"
		6: "Fast Fade Away"
		7: "Slow Become Solid"
		8: "Fast Become Solid"
		14: "Constant Glow"
		15: "Distort"
		16: "Hologram (Distort + fade)"
	]
	rendermode(choices) : "Render Mode" : 0 =
	[
		0: "Normal"
		1: "Color"
		2: "Texture"
		3: "Glow"
		4: "Solid"
		5: "Additive"
	]
	renderamt(integer) : "FX Amount (1 - 255)"
	rendercolor(color255) : "FX Color (R G B)" : "0 0 0"
]

@PointClass base(Targetname, Angles) sprite() = cycler_sprite : "Sprite Cycler" 
[
	model(sprite) : "Sprite"
	framerate(integer) : "Frames per second" : 10
	renderfx(choices) :"Render FX" : 0 =
	[
		0: "Normal"
		1: "Slow Pulse"
		2: "Fast Pulse"
		3: "Slow Wide Pulse"
		4: "Fast Wide Pulse"
		9: "Slow Strobe"
		10: "Fast Strobe"
		11: "Faster Strobe"
		12: "Slow Flicker"
		13: "Fast Flicker"
		5: "Slow Fade Away"
		6: "Fast Fade Away"
		7: "Slow Become Solid"
		8: "Fast Become Solid"
		14: "Constant Glow"
		15: "Distort"
		16: "Hologram (Distort + fade)"
	]
	rendermode(choices) : "Render Mode" : 0 =
	[
		0: "Normal"
		1: "Color"
		2: "Texture"
		3: "Glow"
		4: "Solid"
		5: "Additive"
	]
	renderamt(integer) : "FX Amount (1 - 255)"
	rendercolor(color255) : "FX Color (R G B)" : "0 0 0"
]

@PointClass base(Monster) size(-16 -16 -16, 16 16 16) = cycler_weapon : "Weapon Cycler" 
[]

@PointClass sprite() base(Targetname, RenderFields, Angles) size(-4 -4 -4, 4 4 4) = cycler_wreckage : "Wreckage" 
[
	framerate(string) : "Framerate" : "10.0"
	model(sprite) : "Sprite Name" : "sprites/fire.spr"
	scale(string) : "Scale" : "1.0"
	spawnflags(flags) =
	[
		32: "Toggle" : 0
		64: "Start ON" : 0
	]
]

//
// Environmental effects
//

@BaseClass = BeamStartEnd 
[
	LightningStart(target_destination) : "Start Entity" 
	LightningEnd(target_destination) : "Ending Entity" 
]
@PointClass base(Targetname, BeamStartEnd, RenderFxChoices) size(-16 -16 -16, 16 16 16) = env_beam : "Energy Beam Effect"
[
	renderamt(integer) : "Brightness (1 - 255)" : 100
	rendercolor(color255) : "Beam Color (R G B)" : "0 0 0"
	Radius(integer) : "Radius" : 256
	life(string) : "Life (seconds 0 = infinite)" : "1"
	BoltWidth(integer) : "Width of beam (pixels*0.1 0-255)" : 20
	NoiseAmplitude(integer) : "Amount of noise (0-255)" : 0
	texture(sprite) : "Sprite Name" : "sprites/laserbeam.spr"
	TextureScroll(integer) : "Texture Scroll Rate (0-100)" : 35
	framerate(integer) : "Frames per 10 seconds" : 0
	framestart(integer) : "Starting Frame" : 0
	StrikeTime(string) : "Strike again time (secs)" : "1"
	damage(string) : "Damage / second" : "0"
	spawnflags(flags) = 
	[
		1 : "Start On" : 0
		2 : "Toggle" : 0
		4 : "Random Strike" : 0
		8 : "Ring" : 0
		16: "StartSparks" : 0
		32: "EndSparks" : 0
		64: "Decal End" : 0
		128: "Shade Start" : 0
		256: "Shade End" : 0
	]
]

@PointClass base(Targetname, Angles) size(-4 -4 -4, 4 4 4) = env_beverage : "Beverage Dispenser"
[
	health(integer) : "Capacity" : 10
	skin(choices) : "Beverage Type" : 0 = 
	[
		0 : "Coca-Cola"
		1 : "Sprite"
		2 : "Diet Coke"
		3 : "Orange"
		4 : "Surge"
		5 : "Moxie"
		6 : "Random"
	]
	model(string) : "Custom Model" : ""
	weapons(integer) : "Health for Pickup" : 1
]

@PointClass base(Targetname, Angles) size(-16 -16 -16, 16 16 16) color(255 0 0) = env_blood : "Blood Effects" 
[
	color(choices) : "Blood Color" : 0 =
	[
		0 : "Red (Human)"
		1 : "Yellow (Alien)"
	]
	amount(string) : "Amount of blood (damage to simulate)" : "100"
	spawnflags(flags) =
	[
		1: "Random Direction" : 0
		2: "Blood Stream" : 0
		4: "On Player" : 0
		8: "Spray decals" : 0
	]
]

@SolidClass base(Targetname) = env_bubbles : "Bubble Volume" 
[
	density(integer) : "Bubble density" : 2
	frequency(integer) : "Bubble frequency" : 2
	current(integer) : "Speed of Current" : 0
	spawnflags(Flags) = 
	[
		1 : "Start Off" 	: 0
	]
]

@PointClass base(Targetname) size(-16 -16 -16, 16 16 16) = env_explosion : "Explosion" 
[
	iMagnitude(Integer) : "Magnitude" : 100
	spawnflags(flags) =
	[
		1: "No Damage" : 0
		2: "Repeatable" : 0
		4: "No Fireball" : 0
		8: "No Smoke" : 0
		16: "No Decal" : 0
		32: "No Sparks" : 0
	]
]

@PointClass base(Targetname) color(255 255 128) = env_global : "Global State"
[
	globalstate(string) : "Global State to Set"
	triggermode(choices) : "Trigger Mode" : 0 =
	[
		0 : "Off"
		1 : "On"
		2 : "Dead"
		3 : "Toggle"
	]
	initialstate(choices) : "Initial State" : 0 =
	[
		0 : "Off"
		1 : "On"
		2 : "Dead"
	]
	spawnflags(flags) =
	[
		1 : "Set Initial State" : 0
	]
]

@PointClass sprite() base(Targetname, RenderFields) size(-4 -4 -4, 4 4 4) color(30 100 0) = env_glow : "Light Glow/Haze" 
[
	model(sprite) : "Sprite Name" : "sprites/glow01.spr"
	scale(integer) : "Scale" : 1
]

@PointClass base(Targetname) = env_fade : "Screen Fade" 
[
	spawnflags(flags) =
	[
		1: "Fade From" : 0
		2: "Modulate" : 0
		4: "Activator Only" : 0
	]
	duration(string) : "Duration (seconds)" : "2"
	holdtime(string) : "Hold Fade (seconds)" : "0"
	renderamt(integer) : "Fade Alpha" : 255
	rendercolor(color255) : "Fade Color (R G B)" : "0 0 0"
]

@PointClass base(Targetname) size(-16 -16 -16, 16 16 16) = env_funnel : "Large Portal Funnel" 
[
	spawnflags(flags) =
	[
		1: "Reverse" : 0
	]
]

@PointClass base(Targetname, RenderFxChoices, Angles) size(-16 -16 -16, 16 16 16) = env_laser : "Laser Beam Effect"
[
	LaserTarget(target_destination) : "Target of Laser" 
	renderamt(integer) : "Brightness (1 - 255)" : 100
	rendercolor(color255) : "Beam Color (R G B)" : "0 0 0"
	width(integer) : "Width of beam (pixels*0.1 0-255)" : 20
	NoiseAmplitude(integer) : "Amount of noise (0-255)" : 0
	texture(sprite) : "Sprite Name" : "sprites/laserbeam.spr"
	EndSprite(sprite) : "End Sprite" : ""
	TextureScroll(integer) : "Texture Scroll Rate (0-100)" : 35
	framestart(integer) : "Starting Frame" : 0
	damage(string) : "Damage / second" : "100"
	spawnflags(flags) = 
	[
		1 : "Start On" : 0
		16: "StartSparks" : 0
		32: "EndSparks" : 0
		64: "Decal End" : 0
	]
]

@PointClass base(Targetname, Target) = env_message : "HUD Text Message" 
[
	message(string) : "Message Name"
	spawnflags(flags) =
	[
		1: "Play Once" : 0
		2: "All Clients" : 0
	]
	messagesound(sound) : "Sound Effect"
	messagevolume(string) : "Volume 0-10" : "10"
	messageattenuation(Choices) : "Sound Radius" : 0 =
	[
		0 : "Small Radius"
		1 : "Medium Radius"
		2 : "Large  Radius"
		3 : "Play Everywhere"
	]
]

@PointClass base(Targetname, Target, RenderFields) size(-16 -16 -16, 16 16 16) color(100 100 0) = env_render : "Render Controls"
[
	spawnflags(flags) =
	[
		1: "No Renderfx" : 0
		2: "No Renderamt" : 0
		4: "No Rendermode" : 0
		8: "No Rendercolor" : 0
	// aone - automatically change rendermode, do it by searching
		16: "Auto Apply" : 0
	// end aone 
	]
	// aone
	armorvalue(string): "radius (0 disables)" : "0"
	// end aone
]


@PointClass base(Targetname) = env_shake : "Screen Shake" 
[
	spawnflags(flags) =
	[
		1: "GlobalShake" : 0
	]
	amplitude(string) : "Amplitude 0-16" : "4"
	radius(string) : "Effect radius" : "500"
	duration(string) : "Duration (seconds)" : "1"
	frequency(string) : "0.1 = jerk, 255.0 = rumble" : "2.5"
]

@PointClass base(gibshooterbase, RenderFields) size(-16 -16 -16, 16 16 16) = env_shooter : "Model Shooter"
[
	shootmodel(studio) : "Model or Sprite name" : ""
	shootsounds(choices) :"Material Sound" : -1 =
	[
		-1: "None"
		0: "Glass"
		1: "Wood"
		2: "Metal"
		3: "Flesh"
		4: "Concrete"  
	]
	scale(string) : "Gib Sprite Scale" : ""
	skin(integer) : "Gib Skin" : 0
]

@PointClass iconsprite("sprites/speaker.spr") = env_sound : "DSP Sound" 
[
	radius(integer) : "Radius" : 128
	roomtype(Choices) : "Room Type" : 0 =
	[
		0 : "Normal (off)"
		1 : "Generic"
		
		2 : "Metal Small"
		3 : "Metal Medium"
		4 : "Metal Large"
	
		5 : "Tunnel Small"
		6 : "Tunnel Medium"
		7 : "Tunnel Large"
	
		8 : "Chamber Small"
		9 : "Chamber Medium"
		10: "Chamber Large"

		11: "Bright Small"
		12: "Bright Medium"
		13: "Bright Large"

		14: "Water 1"
		15: "Water 2"
		16: "Water 3"

		17: "Concrete Small"
		18: "Concrete Medium"
		19: "Concrete Large"

		20: "Big 1"
		21: "Big 2"
		22: "Big 3"

		23: "Cavern Small"
		24: "Cavern Medium"
		25: "Cavern Large"

		26: "Weirdo 1"
		27: "Weirdo 2"
		28: "Weirdo 3"
	]
]

@PointClass base(Targetname, Angles) size(-16 -16 -16, 16 16 16) = env_spark : "Spark" 
[
	MaxDelay(string) : "Max Delay" : "0"
	spawnflags(flags) =
	[
		32: "Toggle" : 0
		64: "Start ON" : 0
	]
]

@PointClass sprite() base(Targetname, RenderFields, Angles) size(-4 -4 -4, 4 4 4) = env_sprite : "Sprite Effect" 
[
	framerate(string) : "Framerate" : "10.0"
	model(sprite) : "Sprite Name" : "sprites/glow01.spr"
	scale(string) : "Scale" : ""
	spawnflags(flags) =
	[
		1: "Start on" : 0
		2: "Play Once" : 0
	]
]

@SolidClass base(Breakable, RenderFields, ZHLT) = func_breakable : "Breakable Object" 
[
	spawnflags(flags) =
	[
		1 : "Only Trigger" : 0
		2 : "Touch"	   : 0
		4 : "Pressure"     : 0
		256: "Instant Crowbar" : 1
	]
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Global,Targetname, Target, RenderFields, Angles, ZHLT) = func_button : "Button" 
[
	speed(integer) : "Speed" : 5
	health(integer) : "Health (shootable if > 0)"
	lip(integer) : "Lip"
	master(string) : "Master" 
	sounds(choices) : "Sounds" : 0 = 
	[
		0: "None"
		1: "Big zap & Warmup"
		2: "Access Denied"
		3: "Access Granted"
		4: "Quick Combolock"
		5: "Power Deadbolt 1"
		6: "Power Deadbolt 2"
		7: "Plunger"
		8: "Small zap"
		9: "Keycard Sound"
		10: "Buzz"
		11: "Buzz Off"
		14: "Lightswitch"
	]
	wait(integer) : "delay before reset (-1 stay)" : 3
	delay(string) : "Delay before trigger" : "0"
	spawnflags(flags) =
	[
		1: "Don't move" : 0
		32: "Toggle" : 0
		64: "Sparks" : 0
		256:"Touch Activates": 0
	]
	locked_sound(choices) : "Locked Sound" : 0 = 
	[
		0: "None"
		2: "Access Denied"
		8: "Small zap"
		10: "Buzz"
		11: "Buzz Off"
		12: "Latch Locked"
	]
	unlocked_sound(choices) : "Unlocked Sound" : 0 = 
	[
		0: "None"
		1: "Big zap & Warmup"
		3: "Access Granted"
		4: "Quick Combolock"
		5: "Power Deadbolt 1"
		6: "Power Deadbolt 2"
		7: "Plunger"
		8: "Small zap"
		9: "Keycard Sound"
		10: "Buzz"
		13: "Latch Unlocked"
		14: "Lightswitch"
	]
	locked_sentence(choices) : "Locked Sentence" : 0 = 
	[
		0: "None"
		1: "Gen. Access Denied"
		2: "Security Lockout"
		3: "Blast Door"
		4: "Fire Door"
		5: "Chemical Door"
		6: "Radiation Door"
		7: "Gen. Containment"
		8: "Maintenance Door"
		9: "Broken Shut Door"
	]
	unlocked_sentence(choices) : "Unlocked Sentence" : 0 = 
	[
		0: "None"
		1: "Gen. Access Granted"
		2: "Security Disengaged"
		3: "Blast Door"
		4: "Fire Door"
		5: "Chemical Door"
		6: "Radiation Door"
		7: "Gen. Containment"
		8: "Maintenance area"
	]
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Global,RenderFields, Targetname, Angles, ZHLT) = func_conveyor : "Conveyor Belt" 
[
	spawnflags(flags) =
	[
		1 : "No Push" : 0
		2 : "Not Solid" : 0
	]
	speed(string) : "Conveyor Speed" : "100"
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Door, ZHLT) = func_door : "Basic door" []

@SolidClass base(Door, ZHLT) = func_door_rotating : "Rotating door" 
[
	spawnflags(flags) =
	[
		2 : "Reverse Dir" : 0
		16: "One-way" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	distance(integer) : "Distance (deg)" : 90
]

@SolidClass base(Appearflags, RenderFields, ZHLT) = func_friction : "Surface with a change in friction" 
[
	modifier(integer) : "Percentage of standard (0 - 100)" : 15
]

@SolidClass base(Targetname, RenderFields, Global, ZHLT) = func_guntarget : "Moving platform" 
[
	speed(integer) : "Speed (units per second)" : 100
	target(target_source) : "First stop target"
	message(target_source) : "Fire on damage"
	health(integer) : "Damage to Take" : 0
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Global, RenderFields, ZHLT) = func_healthcharger: "Wall health recharger" 
[
	// dmdelay(integer) : "Deathmatch recharge delay" : 0
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Targetname, RenderFields, ZHLT) = func_illusionary : "Fake Wall/Light" 
[

	skin(choices) : "Contents" : -1 =
	[
		-1: "Empty"
		-7: "Volumetric Light"
	]
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Targetname) = func_ladder : "Ladder" []

@SolidClass base(Targetname) = func_monsterclip : "Monster clip brush" []

@SolidClass base(Targetname) = func_mortar_field : "Mortar Field" 
[
	m_flSpread(integer) : "Spread Radius" : 64
	m_iCount(integer) : "Repeat Count" : 1
	m_fControl(Choices) : "Targeting" : 0 =
	[
		0 : "Random"
		1 : "Activator"
		2 : "Table"
	]
	m_iszXController(target_destination) : "X Controller"
	m_iszYController(target_destination) : "Y Controller"
]

@SolidClass base(Global,Appearflags, Targetname, RenderFields, Angles, ZHLT) = func_pendulum : "Swings back and forth" 
[
	speed(integer) : "Speed" : 100
	distance(integer) : "Distance (deg)" : 90
	damp(integer) : "Damping (0-1000)" : 0
	dmg(integer) : "Damage inflicted when blocked" : 0
	spawnflags(flags) =
	[
		1: "Start ON" : 0
		8: "Passable" : 0
		16: "Auto-return" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	_minlight(integer) : "_minlight"
]

@SolidClass base(Targetname,Global,RenderFields, PlatSounds, ZHLT) = func_plat : "Elevator" 
[
	spawnflags(Flags) =
	[
		1: "Toggle" : 0
	]
	height(integer) : "Travel altitude (can be negative)" : 0
	speed(integer) : "Speed" : 50
	_minlight(string) : "Minimum light level"
]	

@SolidClass base(Targetname, Global, RenderFields, PlatSounds, Angles, ZHLT) = func_platrot : "Moving Rotating platform" 
[
	spawnflags(Flags) =
	[
		1: "Toggle" : 1
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	speed(integer) : "Speed of rotation" : 50
	height(integer) : "Travel altitude (can be negative)" : 0
	rotation(integer) : "Spin amount" : 0
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Breakable, RenderFields, ZHLT) = func_pushable : "Pushable object"
[
	size(choices) : "Hull Size" : 0 =
	[
		0: "Point size"
		1: "Player size"
		2: "Big Size"
		3: "Player duck"
	]
	spawnflags(flags) =
	[
		128: "Breakable" : 0
	]
	friction(integer) : "Friction (0-400)" : 50
	buoyancy(integer) : "Buoyancy" : 20
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Global,RenderFields, ZHLT) = func_recharge: "Battery recharger" 
[
	// dmdelay(integer) : "Deathmatch recharge delay" : 0
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Targetname, Global, RenderFields, Angles, ZHLT) = func_rot_button : "RotatingButton" 
[
	target(target_destination) : "Targetted object"
	// changetarget will change the button's target's TARGET field to the button's changetarget.
	changetarget(target_destination) : "ChangeTarget Name"
	master(string) : "Master" 
	speed(integer) : "Speed" : 50
	health(integer) : "Health (shootable if > 0)"
	sounds(choices) : "Sounds" : 21 = 
	[
		21: "Squeaky"
		22: "Squeaky Pneumatic"
		23: "Ratchet Groan"
		24: "Clean Ratchet"
		25: "Gas Clunk"
	]
	wait(choices) : "Delay before reset" : 3 =
	[
		-1: "Stays pressed"
	]
	delay(string) : "Delay before trigger" : "0"
	distance(integer) : "Distance (deg)" : 90
	spawnflags(flags) =
	[
		1 : "Not solid" : 0
		2 : "Reverse Dir" : 0
		32: "Toggle" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
		256:"Touch Activates": 0
	]
	_minlight(integer) : "_minlight"
]

@SolidClass base(Targetname, Global, RenderFields, Angles, ZHLT) = func_rotating : "Rotating Object"
[
	speed(integer)	: "Rotation Speed" : 0
	volume(integer) : "Volume (10 = loudest)" : 10
	fanfriction(integer) : "Friction (0 - 100%)" : 20
	sounds(choices) : "Fan Sounds" : 0 =
	[
		0 : "No Sound" 
		1 : "Fast Whine"
		2 : "Slow Rush"
		3 : "Medium Rickety"
		4 : "Fast Beating"
		5 : "Slow Smooth"
	]
	message(sound) : "WAV Name"
	spawnflags(flags) =
	[
		1 : "Start ON" 		: 0
		2 : "Reverse Direction" : 0
		4 : "X Axis" 		: 0
		8 : "Y Axis" 		: 0
		16: "Acc/Dcc"		: 0
		32: "Fan Pain"		: 0
		64: "Not Solid"		: 0
		128: "Small Radius" : 0
		256: "Medium Radius" : 0
		512: "Large Radius" : 1	
	]
	_minlight(integer) : "_minlight"
	spawnorigin(string) : "X Y Z - Move here after lighting" : "0 0 0"
	dmg(integer) : "Damage inflicted when blocked" : 0
]

@SolidClass base(BaseTank, ZHLT) = func_tank : "Brush Gun Turret" 
[
	bullet(choices) : "Bullets" : 0 = 
	[
		0: "None"
		1: "9mm"
		2: "MP5"
		3: "12mm"
	]
]

@SolidClass = func_tankcontrols : "Tank controls"
[
	target(target_destination) : "Tank entity name"
]

@SolidClass base(BaseTank, ZHLT) = func_tanklaser : "Brush Laser Turret" 
[
	laserentity(target_source) : "env_laser Entity"
]

@SolidClass base(BaseTank, ZHLT) = func_tankrocket : "Brush Rocket Turret" []


@SolidClass base(BaseTank, ZHLT) = func_tankmortar : "Brush Mortar Turret" 
[
	iMagnitude(Integer) : "Explosion Magnitude" : 100
]

@SolidClass base(Trackchange, ZHLT) = func_trackautochange : "Automatic track changing platform"
[
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Trackchange, ZHLT) = func_trackchange : "Train track changing platform"
[
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Targetname, Global, RenderFields, ZHLT) = func_tracktrain : "Track Train" 
[
	spawnflags(flags) =
	[
		1 : "No Pitch (X-rot)" : 0
		2 : "No User Control" : 0
		8 : "Passable" : 0
	]
	target(target_destination) : "First stop target"
	sounds(choices) : "Sound" : 0 =
	[
		0: "None"
		1: "Rail 1"
		2: "Rail 2"
		3: "Rail 3"
		4: "Rail 4"
		5: "Rail 6"
		6: "Rail 7"
	]
	wheels(integer) : "Distance between the wheels" : 50
	height(integer) : "Height above track" : 4
	startspeed(integer) : "Initial speed" : 0
	speed(integer) : "Speed (units per second)" : 64
	dmg(integer) : "Damage on crush" : 0	
	volume(integer) : "Volume (10 = loudest)" : 10
	bank(string) : "Bank angle on turns" : "0"
	_minlight(string) : "Minimum light level"
]

@SolidClass = func_traincontrols : "Train Controls"
[
	target(target_destination) : "Train Name"
]

@SolidClass base(Targetname, Global, RenderFields, ZHLT) = func_train : "Moving platform" 
[
	target(target_source) : "First stop target"
	movesnd(choices) : "Move Sound" : 0 = 
	[
		0: "No Sound"
		1: "big elev 1"
		2: "big elev 2"
		3: "tech elev 1"
		4: "tech elev 2"
		5: "tech elev 3"
		6: "freight elev 1"
		7: "freight elev 2"
		8: "heavy elev"
		9: "rack elev"
		10: "rail elev"
		11: "squeek elev"
		12: "odd elev 1"
		13: "odd elev 2"
	]
	stopsnd(choices) : "Stop Sound" : 0 = 
	[
		0: "No Sound"
		1: "big elev stop1"
		2: "big elev stop2"
		3: "freight elev stop"
		4: "heavy elev stop"
		5: "rack stop"
		6: "rail stop"
		7: "squeek stop"
		8: "quick stop"
	]
	speed(integer) : "Speed (units per second)" : 64
	avelocity(string) : "Angular Veocity (y z x)"
	dmg(integer) : "Damage on crush" : 0
	skin(integer) : "Contents" : 0
	volume(string) : "Sound Volume 0.0 - 1.0" : "0.85"
	spawnflags(flags) =
	[
		8 : "Not solid" : 0
	]
	_minlight(string) : "Minimum light level"
]

@SolidClass base(Targetname, Appearflags, RenderFields, Global, ZHLT) = func_wall : "Wall" 
[
	_minlight(string) : "Minimum light level"
]

@SolidClass base(func_wall) = func_wall_toggle : "Toggleable geometry" 
[
	spawnflags(flags) =
	[
		1 : "Starts Invisible" : 0
	]
]

@SolidClass base(Door, ZHLT) = func_water : "Liquid" 
[
	spawnflags(flags) =
	[
		1 : "Starts Open" : 0
		256:"Use Only" : 0
	]
	skin(choices) : "Contents" : -3 =
	[
		-3: "Water"
		-4: "Slime"
		-5: "Lava"
	]
	WaveHeight(string) : "Wave Height" : "3.2"
]

//
// game entities (requires Half-Life 1.0.0.9)
//

@PointClass base(Targetname, Targetx) = game_counter : "Fires when it hits limit"
[
	spawnflags(flags) =
	[
		1: "Remove On fire" : 0
		2: "Reset On fire" : 1
	]
	master(string) : "Master"
	frags(integer) : "Initial Value" : 0
	health(integer) : "Limit Value" : 10
]

@PointClass base(Targetname, Target) = game_counter_set : "Sets a game_counter"
[
	spawnflags(flags) =
	[
		1: "Remove On fire" : 0
	]
	master(string) : "Master"
	frags(integer) : "New Value" : 10
]

@PointClass base(Targetname) = game_end : "End this multiplayer game" 
[
	master(string) : "Master" 
]

@PointClass base(Targetname) = game_player_equip : "Initial player equipment"
[
	spawnflags(flags) =
	[
		1: "Use Only" : 0
	]
	master(string) : "Team Master"
]

@PointClass base(Targetname) = game_player_hurt : "Hurts player who fires"
[
	dmg(string) : "Damage To Apply" : "999"
	spawnflags(flags) =
	[
		1: "Remove On fire" : 0
	]
	master(string) : "Master" 
]

@PointClass base(Targetname) = game_player_team : "Allows player to change teams"
[
	spawnflags(flags) =
	[
		1 : "Remove On fire" : 0
		2 : "Kill Player" : 0
		4 : "Gib Player" : 0
	]
	target(string) : "game_team_master to use" 
	master(string) : "Master"
]

@PointClass base(Targetname) = game_score : "Award/Deduct Points" 
[
	spawnflags(flags) =
	[
		1: "Allow Negative" : 0
		2: "Team Points" : 0
	]

	points(integer) : "Points to add (+/-)" : 1
	master(string) : "Master" 
]

@PointClass base(Targetname, Targetx) = game_team_master : "Team based master/relay"
[
	spawnflags(flags) =
	[
		1: "Remove On fire" : 0
	]
	triggerstate(choices) : "Trigger State" : 0 = 
	[
		0: "Off"
		1: "On"
		2: "Toggle"
	]
	teamindex(integer) : "Team Index (-1 = no team)" : -1
	master(string) : "Master" 
]

@PointClass base(Targetname, Targetx) = game_team_set : "Sets team of team_master"
[
	spawnflags(flags) =
	[
		1: "Remove On fire" : 0
	]
	master(string) : "Master" 
]

@PointClass base(Targetname, Target) = game_text : "HUD Text Message" 
[
	spawnflags(flags) =
	[
		1: "All Players" : 0
	]

	message(string) : "Message Text"
	x(string) : "X (0 - 1.0 = left to right) (-1 centers)" : "-1"
	y(string) : "Y (0 - 1.0 = top to bottom) (-1 centers)" : "-1"
	effect(Choices) : "Text Effect" : 0 =
	[
		0 : "Fade In/Out"
		1 : "Credits"
		2 : "Scan Out"
	]
	color(color255) : "Color1" : "100 100 100"
	color2(color255) : "Color2" : "240 110 0"
	fadein(string) : "Fade in Time (or character scan time)" : "1.5"
	fadeout(string) : "Fade Out Time" : "0.5"
	holdtime(string) : "Hold Time" : "1.2"
	fxtime(string) : "Scan time (scan effect only)" : "0.25"
	channel(choices) : "Text Channel" : 1 =
	[
		1 : "Channel 1"
		2 : "Channel 2"
		3 : "Channel 3" 
		4 : "Channel 4"
	]
	master(string) : "Master" 
]

@SolidClass base(Targetname) = game_zone_player : "Player Zone brush"
[
	intarget(target_destination) : "Target for IN players"
	outtarget(target_destination) : "Target for OUT players"
	incount(target_destination) : "Counter for IN players"
	outcount(target_destination) : "Counter for OUT players"
	// master(string) : "Master" 
]

@PointClass base(gibshooterbase) = gibshooter : "Gib Shooter" []

//
// info entities
//

@PointClass decal() base(Targetname, Appearflags) = infodecal : "Decal"
[
	texture(decal)
]

@PointClass base(Targetname) size(-24 -24 0, 24 24 16) color(20 190 60) = info_bigmomma : "Big Mamma Node" 
[
	spawnflags(Flags) =
	[
		1 : "Run To Node" : 0
		2 : "Wait Indefinitely" : 0
	]
	target(target_destination) : "Next node"
	radius(string) : "Radius" : "0"
	reachdelay(string) : "Wait after approach" : "0"
	killtarget(target_destination) : "KillTarget"
	reachtarget(target_destination) : "Fire on approach"
	reachsequence(string) : "Sequence on approach" : ""
	health(string) : "Health on approach" : ""
	presequence(string) : "Sequence before approach" : ""
]

@PointClass base(Target, Angles) size(-4 -4 -4, 4 4 4) color(0 255 0) = info_intermission : "Intermission Spot" []

@PointClass base(Targetname) = info_landmark : "Transition Landmark" []

@PointClass size(-24 -24 -4, 24 24 4) color(255 255 0) = info_node : "ai node" []

@PointClass size(-32 -32 0, 32 32 64) color(255 255 0) = info_node_air : "ai air node" []

@PointClass base(Targetname) = info_null : "info_null (spotlight target)" []

@PointClass base(PlayerClass) studio("models/player.mdl") = info_player_coop : "Player cooperative start" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "look_idle"
		1 : "idle"
		2 : "deep_idle"
		3 : "run2"
		4 : "walk2handed"
		5 : "2handshoot"
		6 : "crawl"
		7 : "crouch_idle"
		8 : "jump"
		9 : "jump_idle"
		10 : "swim"
		11 : "treadwater"
		12 : "run"
		13 : "walk"
		14 : "aim_2"
		15 : "shoot_2"
		16 : "aim_1"
		17 : "shoot_1"
		18 : "die_simple"
		19 : "die_backwards1"
		20 : "die_backwards"
		21 : "die_forwards"
		22 : "headshot"
		23 : "die_spin"
		24 : "gutshot"
		25 : "ref_aim_crowbar"
		26 : "ref_shoot_crowbar"
		27 : "crouch_shoot_crowbar"
		28 : "crouch_aim_crowbar"
		29 : "ref_aim_trip"
		30 : "ref_shoot_trip"
		31 : "crouch_aim_trip"
		32 : "crouch_shoot_trip"
		33 : "ref_aim_onehanded"
		34 : "ref_shoot_onehanded"
		35 : "crouch_aim_onehanded"
		36 : "crouch_shoot_onehanded"
		37 : "ref_aim_python"
		38 : "ref_shoot_python"
		39 : "crouch_aim_python"
		40 : "crouch_shoot_python"
		41 : "ref_aim_shotgun"
		42 : "ref_shoot_shotgun"
		43 : "crouch_aim_shotgun"
		44 : "crouch_shoot_shotgun"
		45 : "ref_aim_guass"
		46 : "ref_shoot_guass"
		47 : "crouch_aim_guass"
		48 : "crouch_shoot_guass"
		49 : "ref_aim_mp5"
		50 : "ref_shoot_mp5"
		51 : "crouch_aim_mp5"
		52 : "crouch_shoot_mp5"
		53 : "ref_aim_rpg"
		54 : "ref_shoot_rpg"
		55 : "crouch_aim_rpg"
		56 : "crouch_shoot_rpg"
		57 : "ref_aim_egon"
		58 : "ref_shoot_egon"
		59 : "crouch_aim_egon"
		60 : "crouch_shoot_egon"
		61 : "ref_aim_squeak"
		62 : "ref_shoot_squeak"
		63 : "crouch_aim_squeak"
		64 : "crouch_shoot_squeak"
		65 : "ref_aim_hive"
		66 : "ref_shoot_hive"
		67 : "crouch_aim_hive"
		68 : "crouch_shoot_hive"
		69 : "ref_aim_bow"
		70 : "ref_shoot_bow"
		71 : "crouch_aim_bow"
		72 : "crouch_shoot_bow"
		73 : "deadback"
		74 : "deadsitting"
		75 : "deadstomach"
		76 : "deadtable"
	]
]
@PointClass base(PlayerClass) studio("models/player.mdl") = info_player_deathmatch : "Player deathmatch start" 
[
	target(target_destination) : "Target"
	master(string) : "Master"
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "look_idle"
		1 : "idle"
		2 : "deep_idle"
		3 : "run2"
		4 : "walk2handed"
		5 : "2handshoot"
		6 : "crawl"
		7 : "crouch_idle"
		8 : "jump"
		9 : "jump_idle"
		10 : "swim"
		11 : "treadwater"
		12 : "run"
		13 : "walk"
		14 : "aim_2"
		15 : "shoot_2"
		16 : "aim_1"
		17 : "shoot_1"
		18 : "die_simple"
		19 : "die_backwards1"
		20 : "die_backwards"
		21 : "die_forwards"
		22 : "headshot"
		23 : "die_spin"
		24 : "gutshot"
		25 : "ref_aim_crowbar"
		26 : "ref_shoot_crowbar"
		27 : "crouch_shoot_crowbar"
		28 : "crouch_aim_crowbar"
		29 : "ref_aim_trip"
		30 : "ref_shoot_trip"
		31 : "crouch_aim_trip"
		32 : "crouch_shoot_trip"
		33 : "ref_aim_onehanded"
		34 : "ref_shoot_onehanded"
		35 : "crouch_aim_onehanded"
		36 : "crouch_shoot_onehanded"
		37 : "ref_aim_python"
		38 : "ref_shoot_python"
		39 : "crouch_aim_python"
		40 : "crouch_shoot_python"
		41 : "ref_aim_shotgun"
		42 : "ref_shoot_shotgun"
		43 : "crouch_aim_shotgun"
		44 : "crouch_shoot_shotgun"
		45 : "ref_aim_guass"
		46 : "ref_shoot_guass"
		47 : "crouch_aim_guass"
		48 : "crouch_shoot_guass"
		49 : "ref_aim_mp5"
		50 : "ref_shoot_mp5"
		51 : "crouch_aim_mp5"
		52 : "crouch_shoot_mp5"
		53 : "ref_aim_rpg"
		54 : "ref_shoot_rpg"
		55 : "crouch_aim_rpg"
		56 : "crouch_shoot_rpg"
		57 : "ref_aim_egon"
		58 : "ref_shoot_egon"
		59 : "crouch_aim_egon"
		60 : "crouch_shoot_egon"
		61 : "ref_aim_squeak"
		62 : "ref_shoot_squeak"
		63 : "crouch_aim_squeak"
		64 : "crouch_shoot_squeak"
		65 : "ref_aim_hive"
		66 : "ref_shoot_hive"
		67 : "crouch_aim_hive"
		68 : "crouch_shoot_hive"
		69 : "ref_aim_bow"
		70 : "ref_shoot_bow"
		71 : "crouch_aim_bow"
		72 : "crouch_shoot_bow"
		73 : "deadback"
		74 : "deadsitting"
		75 : "deadstomach"
		76 : "deadtable"
	]
]

@PointClass base(PlayerClass) studio("models/player.mdl") = info_player_start : "Player 1 start" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "look_idle"
		1 : "idle"
		2 : "deep_idle"
		3 : "run2"
		4 : "walk2handed"
		5 : "2handshoot"
		6 : "crawl"
		7 : "crouch_idle"
		8 : "jump"
		9 : "jump_idle"
		10 : "swim"
		11 : "treadwater"
		12 : "run"
		13 : "walk"
		14 : "aim_2"
		15 : "shoot_2"
		16 : "aim_1"
		17 : "shoot_1"
		18 : "die_simple"
		19 : "die_backwards1"
		20 : "die_backwards"
		21 : "die_forwards"
		22 : "headshot"
		23 : "die_spin"
		24 : "gutshot"
		25 : "ref_aim_crowbar"
		26 : "ref_shoot_crowbar"
		27 : "crouch_shoot_crowbar"
		28 : "crouch_aim_crowbar"
		29 : "ref_aim_trip"
		30 : "ref_shoot_trip"
		31 : "crouch_aim_trip"
		32 : "crouch_shoot_trip"
		33 : "ref_aim_onehanded"
		34 : "ref_shoot_onehanded"
		35 : "crouch_aim_onehanded"
		36 : "crouch_shoot_onehanded"
		37 : "ref_aim_python"
		38 : "ref_shoot_python"
		39 : "crouch_aim_python"
		40 : "crouch_shoot_python"
		41 : "ref_aim_shotgun"
		42 : "ref_shoot_shotgun"
		43 : "crouch_aim_shotgun"
		44 : "crouch_shoot_shotgun"
		45 : "ref_aim_guass"
		46 : "ref_shoot_guass"
		47 : "crouch_aim_guass"
		48 : "crouch_shoot_guass"
		49 : "ref_aim_mp5"
		50 : "ref_shoot_mp5"
		51 : "crouch_aim_mp5"
		52 : "crouch_shoot_mp5"
		53 : "ref_aim_rpg"
		54 : "ref_shoot_rpg"
		55 : "crouch_aim_rpg"
		56 : "crouch_shoot_rpg"
		57 : "ref_aim_egon"
		58 : "ref_shoot_egon"
		59 : "crouch_aim_egon"
		60 : "crouch_shoot_egon"
		61 : "ref_aim_squeak"
		62 : "ref_shoot_squeak"
		63 : "crouch_aim_squeak"
		64 : "crouch_shoot_squeak"
		65 : "ref_aim_hive"
		66 : "ref_shoot_hive"
		67 : "crouch_aim_hive"
		68 : "crouch_shoot_hive"
		69 : "ref_aim_bow"
		70 : "ref_shoot_bow"
		71 : "crouch_aim_bow"
		72 : "crouch_shoot_bow"
		73 : "deadback"
		74 : "deadsitting"
		75 : "deadstomach"
		76 : "deadtable"
	]
]
@PointClass base(Targetname) size(-4 -4 -4, 4 4 4) color(200 100 50) = info_target : "Beam Target" []
@PointClass size(-8 -8 0, 8 8 16) base(PlayerClass, Targetname) = info_teleport_destination : "Teleport destination" []

//
// items
//

@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_oxygen.mdl") = item_airtank : "Oxygen tank" []
@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_antidote.mdl") = item_antidote : "Poison antidote" []
@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_battery.mdl") = item_battery : "HEV battery" []
@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_medkit.mdl") = item_healthkit : "Small Health Kit" []
@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_longjump.mdl") = item_longjump : "Longjump Module" []
@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_security.mdl") = item_security : "Security card" []
@PointClass size(-16 -16 0, 16 16 36) base(Weapon, Targetx) studio("models/w_suit.mdl") = item_suit : "HEV Suit" 
[
	spawnflags(Flags) =
	[
		1 : "Short Logon" : 0
	]
]

//
// lights
//

@PointClass iconsprite("sprites/lightbulb.spr") base(Target, Targetname, Light, ZHLT_point) = light : "Invisible lightsource"
[
	spawnflags(Flags) = [ 1 : "Initially dark" : 0 ]
]

@PointClass iconsprite("sprites/lightbulb.spr") base(Targetname, Target, Angles, ZHLT_point) = light_spot : "Spotlight" 
[
	_cone(integer) : "Inner (bright) angle" : 30
	_cone2(integer) : "Outer (fading) angle" : 45
	pitch(integer) : "Pitch" : -90
	_light(color255) : "Brightness" : "255 255 128 200"
	_sky(Choices) : "Is Sky" : 0 = 
	[ 
		0 : "No"
		1 : "Yes"
	]
	spawnflags(Flags) = [ 1 : "Initially dark" : 0 ]
      style(Choices) : "Appearance" : 0 =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
	]
	pattern(string) : "Custom Appearance"
]

@PointClass base(Targetname, Angles, ZHLT_point) iconsprite("sprites/lightbulb.spr") = light_environment : "Environment" 
[
	pitch(integer) : "Pitch" : 0
	_light(color255) : "Brightness" : "255 255 128 200"
]

@SolidClass base(Door, ZHLT) = momentary_door : "Momentary/Continuous door" 
[
	spawnflags(flags) =
	[
		1 : "Starts Open" : 0
	]
]

@SolidClass base(Targetname, Target, Angles, RenderFields, ZHLT) = momentary_rot_button : "Direct wheel control" 
[
	speed(integer) : "Speed" : 50
	master(string) : "Master" 
	sounds(choices) : "Sounds" : 0 = 
	[
		0: "None"
		1: "Big zap & Warmup"
		2: "Access Denied"
		3: "Access Granted"
		4: "Quick Combolock"
		5: "Power Deadbolt 1"
		6: "Power Deadbolt 2"
		7: "Plunger"
		8: "Small zap"
		9: "Keycard Sound"
		21: "Squeaky"
		22: "Squeaky Pneumatic"
		23: "Ratchet Groan"
		24: "Clean Ratchet"
		25: "Gas Clunk"
	]
	distance(integer) : "Distance (deg)" : 90
	returnspeed(integer) : "Auto-return speed" : 0
	spawnflags(flags) =
	[
		1: "Door Hack" : 0
		2: "Not useable" : 0
		16: "Auto Return" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	_minlight(integer) : "_minlight"
]

//
// monsters
//

@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/controller.mdl") = monster_alien_controller : "Controller" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "attack1"
		1 : "attack2"
		2 : "throw"
		3 : "idle2"
		4 : "block"
		5 : "shoot"
		6 : "flinch1"
		7 : "flinch2"
		8 : "fall"
		9 : "forward"
		10 : "backward"
		11 : "up"
		12 : "down"
		13 : "right"
		14 : "left"
		15 : "float"
		16 : "walk"
		17 : "run"
		18 : "die1"
	]
]
@PointClass base(Monster) size(-32 -32 0, 32 32 64) studio("models/agrunt.mdl") = monster_alien_grunt : "Alien Grunt" 
[
	netname(string) : "Squad Name"
	spawnflags(Flags) =
	[
		32 : "SquadLeader" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "threat"
		2 : "walk"
		3 : "run"
		4 : "turnl"
		5 : "turnr"
		6 : "smallflinch"
		7 : "bigflinch"
		8 : "mattack2"
		9 : "mattack3"
		10 : "victorysquat"
		11 : "victoryeat"
		12 : "victorysquat"
		13 : "larmflinch"
		14 : "llegflinch"
		15 : "rarmflinch"
		16 : "rlegflinch"
		17 : "attack3"
		18 : "attack3"
		19 : "hornetattack"
		20 : "quickshoot"
		21 : "longshoot"
		22 : "diehead"
		23 : "diegut"
		24 : "dieforward"
		25 : "diesimple"
		26 : "diebackward"
		27 : "float"
		28 : "scare"
		29 : "bigopen"
		30 : "smashrail"
		31 : "landhard"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/islave.mdl") = monster_alien_slave : "Vortigaunt" 
[
	netname(string) : "Squad Name"
	spawnflags(Flags) =
	[
		32 : "SquadLeader" : 0
		64 : "IgnorePlayer" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "crouch"
		4 : "walk1"
		5 : "walk2"
		6 : "run1"
		7 : "right"
		8 : "left"
		9 : "jump"
		10 : "stairsup"
		11 : "attack1"
		12 : "zapattack"
		13 : "flinch2"
		14 : "laflinch"
		15 : "raflinch"
		16 : "llflinch"
		17 : "rlflinch"
		18 : "dieheadshot"
		19 : "diesimple"
		20 : "diebackward"
		21 : "dieforward"
		22 : "collar1"
		23 : "collar2"
		24 : "pushup"
		25 : "grab"
		26 : "updown"
		27 : "downup"
		28 : "jibber"
		29 : "jabber"
	]
]
@PointClass base(Monster) size(-360 -360 -172, 360 360 8) studio("models/apache.mdl") = monster_apache : "Apache" 
[
	spawnflags(Flags) = 
	[
		8 : "NoWreckage"	: 0
		64 : "Start Inactive" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 36) studio("models/baby_headcrab.mdl") = monster_babycrab : "Baby Headcrab" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "walk"
		4 : "run"
		5 : "angry"
		6 : "flinch"
		7 : "dieback"
		8 : "180_left"
		9 : "180_right"
		10 : "jump"
		11 : "jump_variation1"
		12 : "jump_variation2"
	]
]
@PointClass base(RenderFields) size(-16 -16 -36, 16 16 0) studio("models/barnacle.mdl") = monster_barnacle : "Barnacle Monster" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "flinch_sm"
		4 : "attack1"
		5 : "chewcycle"
		6 : "death"
	]
]
@PointClass base(Monster,TalkMonster) size(-16 -16 0, 16 16 72) studio("models/barney.mdl") = monster_barney : "Barney" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "idle4"
		4 : "walk"
		5 : "run"
		6 : "shootgun"
		7 : "shootgun2"
		8 : "draw"
		9 : "disarm"
		10 : "reload"
		11 : "turnleft"
		12 : "turnright"
		13 : "laflinch"
		14 : "raflinch"
		15 : "llflinch"
		16 : "rlflinch"
		17 : "smlflinch"
		18 : "cower_stand"
		19 : "locked_door"
		20 : "fall_loop"
		21 : "barn_wave"
		22 : "beat_grunt"
		23 : "beat_gruntidle"
		24 : "flashlight"
		25 : "diesimple"
		26 : "dieviolent"
		27 : "diegutshot"
		28 : "dieforward"
		29 : "diebackward"
		30 : "diecrump"
		31 : "barnaclehit"
		32 : "barnaclepull"
		33 : "barnaclecrunch"
		34 : "barnaclechew"
		35 : "lying_on_back"
		36 : "lying_on_side"
		37 : "lying_on_stomach"
		38 : "stuffed_in_vent"
		39 : "standing_idle"
		40 : "cprbarney"
		41 : "cprbarneyrevive"
		42 : "barney_dragvent"
		43 : "dying_barney"
		44 : "dying_barneyidle"
		45 : "dying_friend"
		46 : "dying_friendidle"
		47 : "c1a3_bidle"
		48 : "c1a3_ventb"
		49 : "c1a3_emerge"
		50 : "c1a3_emergeidle"
		51 : "haulbarney"
		52 : "intropush"
		53 : "fence"
		54 : "sit1"
		55 : "almostidle"
		56 : "almost"
		57 : "laseridle"
		58 : "laser_top"
		59 : "laser_bottom"
		60 : "barneyfallidle"
		61 : "barneyfall"
		62 : "c3a2_draw"
		63 : "unlatch"
		64 : "retina"
		65 : "relaxstand"
		66 : "assassinated"
		67 : "trackswitch"
		68 : "pepsiswing"
		69 : "pepsipush"
	 	70 : "buttonpush"
	]
]
@PointClass base(RenderFields,Appearflags, Angles) size(-16 -16 0, 16 16 72) studio("models/barney.mdl") = monster_barney_dead : "Dead Barney" 
[
      pose(Choices) : "Pose" : 0 =
	[
		0 : "On back"
		1 : "On side"
		2 : "On stomach"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 35 =
	[
		35 : "On back"
		36 : "On side"
		37 : "On stomach"
	]
]
@PointClass base(Monster) size(-95 -95 0, 95 95 190) studio("models/big_mom.mdl") = monster_bigmomma : "Big Mamma" 
[
	netname(string) : "First node" : ""
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "walk"
		3 : "run"
		4 : "death"
		5 : "claw"
		6 : "claw"
		7 : "claw"
		8 : "spawn"
		9 : "mortar"
		10 : "flinch"
		11 : "defend"
		12 : "jump"
		13 : "angry1"
		14 : "angry2"
		15 : "angry3"
		16 : "breakwall"
		17 : "fall1"
		18 : "fall2"
		19 : "falldeath"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/floater.mdl") = monster_bloater : "Bloater" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
	]
]
@PointClass base(Monster) size(-32 -32 0, 32 32 64) studio("models/bullsquid.mdl") = monster_bullchicken : "BullChicken" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "walk"
		1 : "run"
		2 : "surprisedhop"
		3 : "flinchs"
		4 : "flinchb"
		5 : "turnleft"
		6 : "turnright"
		7 : "idle"
		8 : "whip"
		9 : "bite"
		10 : "range"
		11 : "look"
		12 : "seecrab"
		13 : "eat"
		14 : "inspectdown"
		15 : "sniff"
		16 : "die"
		17 : "die1"
		18 : "bulljump"
		19 : "draggruntidle"
		20 : "draggrunt"
		21 : "scare"
		22 : "squidfallidle"
		23 : "squidfall"
	]
]
@PointClass base(Monster) size(-3 -3 0, 3 3 3) studio("models/roach.mdl") = monster_cockroach : "Cockroach" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "run"
		1 : "run"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 16) studio("models/aflock.mdl") = monster_flyer_flock : "Flock of Flyers" 
[
	iFlockSize(Integer) : "Flock Size" : 8
	flFlockRadius(Integer) : "Flock Radius" : 128
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
		1 : "fly"
		2 : "fly2"
		3 : "bankL"
		4 : "bankR"
		5 : "hit"
		6 : "wounded"
		7 : "crash"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio() = monster_furniture : "Monster Furniture" 
[
	model(studio) : "model"
]
@PointClass base(Monster) size(-32 -32 0, 32 32 128) studio("models/garg.mdl") = monster_gargantua : "Gargantua" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle3"
		1 : "idle2"
		2 : "idle1"
		3 : "idle4"
		4 : "walk"
		5 : "run"
		6 : "shootflames1"
		7 : "shootflames2"
		8 : "Attack"
		9 : "stomp"
		10 : "180left"
		11 : "180right"
		12 : "Flinchlight"
		13 : "Flinchheavy"
		14 : "die"
		15 : "bitehead"
		16 : "throwbody"
		17 : "smash"
		18 : "rollcar"
		19 : "kickcar"
		20 : "pushcar"
		21 : "bust"
	]
]
@PointClass base(Monster, RenderFields) size(-16 -16 -36, 16 16 36) studio() = monster_generic : "Generic Script Monster" 
[
	spawnflags(Flags) = 
	[
		4 : "Not solid"	: 0
	]
	model(studio) : "model"
	body(Integer) : "Body" : 0
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/gman.mdl") = monster_gman : "G-Man" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle01"
		1 : "idlebrush"
		2 : "idlelook"
		3 : "idle02"
		4 : "open"
		5 : "stand"
		6 : "walk"
		7 : "yes"
		8 : "no"
		9 : "bigno"
		10 : "bigyes"
		11 : "listen"
		12 : "lookdown"
		13 : "lookdown2"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/hgrunt.mdl") = monster_grunt_repel : "Human Grunt (Repel)"
[
	sequence(Choices) : "Animation Sequence (editor)" : 47 =
	[
		47 : "repel_jump"
		48 : "repel_repel"
		49 : "repel_shoot"
		50 : "repel_land"
		51 : "repel_die"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 36) studio("models/headcrab.mdl") = monster_headcrab : "Head Crab" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "walk"
		4 : "run"
		5 : "angry"
		6 : "flinch"
		7 : "dieback"
		8 : "180_left"
		9 : "180_right"
		10 : "jump"
		11 : "jump_variation1"
		12 : "jump_variation2"
		13 : "yaw_adjustment"
		14 : "headcrabbed#1"
		15 : "headcrabbed#2"
		16 : "headidle"
		17 : "crashidle"
		18 : "crash"
		19 : "hstruggleidle"
		20 : "hstruggle"
	]
]
@PointClass base(Appearflags,RenderFields, Angles) size(-16 -16 0, 16 16 72) = monster_hevsuit_dead : "Dead HEV Suit" []
@PointClass base(Appearflags,RenderFields, Angles) size(-16 -16 0, 16 16 72) studio("models/hgrunt.mdl") = monster_hgrunt_dead : "Dead Human Grunt" 
[
      pose(Choices) : "Pose" : 0 =
	[
		0 : "On stomach"
		1 : "On side"
		2 : "Seated"
	]
	body(Choices) : "Body" : 0 =
	[
		0 : "Grunt with Gun"
		1 : "Commander with Gun"
		2 : "Grunt no Gun"
		3 : "Commander no Gun"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 44 =
	[
		44 : "deadstomach"
		45 : "deadside"
		46 : "deadsitting"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 36) studio("models/houndeye.mdl") = monster_houndeye : "Houndeye" 
[
	netname(string) : "Squad Name"
	spawnflags(Flags) =
	[
		32 : "SquadLeader" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "run"
		4 : "run"
		5 : "run"
		6 : "die"
		7 : "die1"
		8 : "die2"
		9 : "die3"
		10 : "attack"
		11 : "flinch_small"
		12 : "flinch_small2"
		13 : "die_crumple"
		14 : "walk_limp"
		15 : "walk2"
		16 : "leaderlook"
		17 : "sleep"
		18 : "gotosleep"
		19 : "sleeptostand"
		20 : "madidle"
		21 : "madidle2"
		22 : "madidle3"
		23 : "inspect"
		24 : "eat"
		25 : "180l"
		26 : "180r"
		27 : "jumpback"
		28 : "wakefast"
		29 : "whimper"
		30 : "jumpwindow"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/hassassin.mdl") = monster_human_assassin : "Human Assassin" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle3"
		2 : "idle2"
		3 : "run"
		4 : "walk"
		5 : "shoot"
		6 : "grenadethrow"
		7 : "kick"
		8 : "kickshort"
		9 : "death_during_run"
		10 : "die_backwards"
		11 : "die_simple"
		12 : "jump"
		13 : "fly_up"
		14 : "fly_down"
		15 : "fly_attack"
		16 : "landfromjump"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/hgrunt.mdl") = monster_human_grunt : "Human Grunt (camo)" 
[
	spawnflags(Flags) =
	[
		32 : "SquadLeader" : 0
	]
	netname(string) : "Squad Name"
	weapons(Choices) : "Weapons" : 1 =
	[
		1 : "9mmAR"
		3 : "9mmAR + HG"
		5 : "9mmAR + GL"
		8 : "Shotgun"
		10 : "Shotgun + HG"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 11 =
	[
		0 : "walk1"
		1 : "run"
		2 : "victorydance"
		3 : "cower"
		4 : "smflinch"
		5 : "leftlegsmflinch"
		6 : "rightlegsmflinch"
		7 : "rightarmflinch"
		8 : "leftarmflinch"
		9 : "launchgrenade"
		10 : "throwgrenade"
		11 : "idle1"
		12 : "idle2"
		13 : "combatidle"
		14 : "frontkick"
		15 : "crouching_idle"
		16 : "crouching_wait"
		17 : "crouching_mp5"
		18 : "standing_mp5"
		19 : "reload_mp5"
		20 : "crouching_shotgun"
		21 : "standing_shotgun"
		22 : "reload_shotgun"
		23 : "advance_signal"
		24 : "flank_signal"
		25 : "retreat_signal"
		26 : "drop_grenade"
		27 : "limpingwalk"
		28 : "limpingrun"
		29 : "180L"
		30 : "180R"
		31 : "strafeleft"
		32 : "straferight"
		33 : "dieback1"
		34 : "dieforward"
		35 : "diesimple"
		36 : "diebackwards"
		37 : "dieheadshot"
		38 : "diegutshot"
		39 : "barnacled1"
		40 : "barnacled2"
		41 : "barnacled3"
		42 : "barnacled4"
		43 : "dead_on_stomach"
		44 : "deadstomach"
		45 : "deadside"
		46 : "deadsitting"
		47 : "repel_jump"
		48 : "repel_repel"
		49 : "repel_shoot"
		50 : "repel_land"
		51 : "repel_die"
		52 : "dragholeidle"
		53 : "draghole"
		54 : "bustwall"
		55 : "hoprail"
		56 : "converse1"
		57 : "converse2"
		58 : "startleleft"
		59 : "startleright"
		60 : "divecover"
		61 : "defuse"
		62 : "corner1"
		63 : "corner2"
		64 : "stonetoss"
		65 : "cliffdie"
		66 : "diveaside_idle"
		67 : "diveaside"
		68 : "kneeldive_idle"
		69 : "kneeldive"
		70 : "WM_button"
		71 : "WM_moatjump"
		72 : "bustwindow"
		73 : "dragleft"
		74 : "dragright"
		75 : "trackwave"
		76 : "trackdive"
		77 : "flyback"
		78 : "impaled"
		79 : "jumptracks"
		80 : "pipetoss"
		81 : "plunger"
	]
]
@PointClass base(Monster) size(-32 -32 0, 32 32 64) studio("models/icky.mdl") = monster_ichthyosaur : "Ichthyosaur" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
		1 : "swim"
		2 : "thrust"
		3 : "die1"
		4 : "die2"
		5 : "smflinch"
		6 : "bgflinch"
		7 : "bellyup"
		8 : "bite_r"
		9 : "bite_l"
		10 : "srattack1"
		11 : "rturn"
		12 : "lturn"
		13 : "180turn"
		14 : "hitcage"
		15 : "new_ickyjump"
	]
]
@PointClass base(Monster) size(-6 -6 0, 6 6 6) studio("models/leech.mdl") = monster_leech : "Leech" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "swim"
		1 : "swim2"
		2 : "attack"
		3 : "hover"
		4 : "leftturn"
		5 : "rightturn"
		6 : "death"
		7 : "death_end"
	]
]
@PointClass base(Monster) size(-16 -16 -32, 16 16 32) studio("models/miniturret.mdl") = monster_miniturret : "Mini Auto Turret"
[
	orientation(Choices) : "Orientation" : 0 =
	[
		0 : "Floor Mount"
		1 : "Ceiling Mount"
	]
	spawnflags(Flags) = 
	[
		32 : "Autostart" : 0
		64 : "Start Inactive" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle_off"
		1 : "fire"
		2 : "spin"
		3 : "deploy"
		4 : "retire"
		5 : "die"
	]
]
@PointClass base(Monster) size(-192 -192 0, 192 192 384) studio("models/nihilanth.mdl") = monster_nihilanth : "Nihilanth" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "float"
		1 : "attack1"
		2 : "attack2"
		3 : "throw"
		4 : "block"
		5 : "recharge"
		6 : "float_open"
		7 : "attack1_open"
		8 : "attack2_open"
		9 : "flinch1"
		10 : "flinch2"
		11 : "fall"
		12 : "die1"
		13 : "walk_f"
		14 : "walk_b"
		15 : "walk_u"
		16 : "walk_d"
		17 : "walk_r"
		18 : "walk_l"
		19 : "walk"
		20 : "shoot"
	]
]
@PointClass base(Monster) size(-480 -480 -112, 480 480 24) studio("models/osprey.mdl") = monster_osprey : "Osprey"
[
	spawnflags(Flags) = 
	[
		64 : "Start Inactive" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "rotor"
	]
]
@PointClass base(Monster) size(-6 -6 0, 6 6 6) studio("models/bigrat.mdl") = monster_rat : "Rat (no ai?)" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle4"
		1 : "idle5"
		2 : "idle6"
		3 : "idle7"
		4 : "walk2"
		5 : "jump"
		6 : "eat"
		7 : "die1"
	]
]
@PointClass base(Weapon,Targetx,RenderFields) studio("models/w_satchel.mdl") = monster_satchelcharge : "Live Satchel Charge" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
		1 : "onback"
	]
]
@PointClass base(Monster, TalkMonster) size(-16 -16 0, 16 16 72) studio("models/scientist.mdl") = monster_scientist : "Scared Scientist" 
[
      body(Choices) : "Body" : -1 =
	[
		-1 : "Random"
		0 : "Glasses"
		1 : "Einstein"
		2 : "Luther"
		3 : "Slick"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 13 =
	[
		0 : "walk"
		1 : "walk_scared"
		2 : "run"
		3 : "run1"
		4 : "run2"
		5 : "180_Left"
		6 : "180_Right"
		7 : "flinch"
		8 : "flinch1"
		9 : "laflinch"
		10 : "raflinch"
		11 : "llflinch"
		12 : "rlflinch"
		13 : "idle1"
		14 : "idle3"
		15 : "idle4"
		16 : "idle5"
		17 : "idle6"
		18 : "idle7"
		19 : "crouchstand"
		20 : "crouch_idle"
		21 : "crouch_idle2"
		22 : "crouch_idle3"
		23 : "crouch_idle3"
		24 : "panic"
		25 : "fear1"
		26 : "fear2"
		27 : "eye_wipe"
		28 : "pull_needle"
		29 : "return_needle"
		30 : "give_shot"
		31 : "diesimple"
		32 : "dieforward"
		33 : "dieforward1"
		34 : "diebackward"
		35 : "headshot"
		36 : "gutshot"
		37 : "lying_on_back"
		38 : "lying_on_stomach"
		39 : "dead_sitting"
		40 : "dead_table1"
		41 : "dead_table2"
		42 : "dead_table3"
		43 : "barnacled1"
		44 : "barnacled2"
		45 : "barnacled3"
		46 : "barnacled4"
		47 : "console"
		48 : "checktie"
		49 : "dryhands"
		50 : "tieshoe"
		51 : "whiteboard"
		52 : "studycart"
		53 : "lean"
		54 : "pondering"
		55 : "pondering2"
		56 : "pondering3"
		57 : "buysoda"
		58 : "pause"
		59 : "yes"
		60 : "no"
		61 : "push_button"
		62 : "converse1"
		63 : "converse2"
		64 : "retina"
		65 : "talkleft"
		66 : "talkright"
		67 : "deskidle"
		68 : "coffee"
		69 : "franticbutton"
		70 : "startle"
		71 : "sitlookleft"
		72 : "sitlookright"
		73 : "sitscared"
		74 : "sitting2"
		75 : "sitting3"
		76 : "cprscientist"
		77 : "cprscientistrevive"
		78 : "cowering_in_corner"
		79 : "sstruggleidle"
		80 : "sstruggle"
		81 : "headcrabbed"
		82 : "c1a0_catwalkidle"
		83 : "c1a0_catwalk"
		84 : "ceiling_dangle"
		85 : "ventpull1"
		86 : "ventpull2"
		87 : "ventpullidle1"
		88 : "ventpullidle2"
		89 : "sitidle"
		90 : "sitstand"
		91 : "keypad"
		92 : "panic1"
		93 : "lookwindow"
		94 : "wave"
		95 : "pulldoor"
		96 : "beatdoor"
		97 : "fallingloop"
		98 : "crawlwindow"
		99 : "divewindow"
		100 : "locked_door"
		101 : "push_button2"
		102 : "unlock_door"
		103 : "quicklook"
		104 : "handrailidle"
		105 : "handrail"
		106 : "hanging_idle"
		107 : "fall"
		108 : "scientist_get_pulled"
		109 : "hanging_idle2"
		110 : "fall_elevator"
		111 : "scientist_idlewall"
		112 : "ickyjump_sci"
		113 : "haulscientist"
		114 : "c1a4_wounded_idle"
		115 : "c1a4_dying_speech"
		116 : "tentacle_grab"
		117 : "helicack"
		118 : "windive"
		119 : "scicrashidle"
		120 : "scicrash"
		121 : "onguard"
		122 : "seeya"
		123 : "rocketcrawl"
		124 : "portal"
		125 : "gluonshow"
		126 : "crouch"
		127 : "kneel"
	]
]
@PointClass base(Appearflags,RenderFields, Angles) size(-16 -16 0, 16 16 72) studio("models/scientist.mdl") = monster_scientist_dead : "Dead Scientist" 
[
      body(Choices) : "Body" : -1 =
	[
		-1 : "Random"
		0 : "Glasses"
		1 : "Einstein"
		2 : "Luther"
		3 : "Slick"
	]
      pose(Choices) : "Pose" : 0 =
	[
		0 : "On back"
		1 : "On Stomach"
		2 : "Sitting"
		3 : "Hanging"
		4 : "Table1"
		5 : "Table2"
		6 : "Table3"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 37 =
	[
		37 : "lying_on_back"
		38 : "lying_on_stomach"
		39 : "dead_sitting"
		40 : "dead_table1"
		41 : "dead_table2"
		42 : "dead_table3"
	]
]
@PointClass base(Monster) size(-14 -14 22, 14 14 72) studio("models/scientist.mdl") = monster_sitting_scientist : "Sitting Scientist" 
[
      body(Choices) : "Body" : -1 =
	[
		-1 : "Random"
		0 : "Glasses"
		1 : "Einstein"
		2 : "Luther"
		3 : "Slick"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 73 =
	[
		71 : "sitlookleft"
		72 : "sitlookright"
		73 : "sitscared"
		74 : "sitting2"
		75 : "sitting3"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/sentry.mdl") = monster_sentry : "Sentry Turret Gun"
[
	spawnflags(Flags) = 
	[
		32 : "Autostart" : 0
		64 : "Start Inactive" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle_off"
		1 : "fire"
		2 : "spin"
		3 : "deploy"
		4 : "retire"
		5 : "die"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 36) studio("models/w_squeak.mdl") = monster_snark : "Armed Snark" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
		1 : "fidget"
		2 : "jump"
		3 : "run"
	]
]
@PointClass base(Monster) size(-32 -32 0, 32 32 64) studio("models/tentacle2.mdl") = monster_tentacle : "Tentacle Arm" 
[
	sweeparc(integer) : "Sweep Arc" : 130
	sound(Choices) : "Tap Sound" : -1 =
	[
		-1 : "None"
		0 : "Silo"
		1 : "Dirt"
		2 : "Water"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "Pit_Idle"
		1 : "rise_to_Temp1"
		2 : "Temp1_to_Floor"
		3 : "Floor_idle"
		4 : "Floor_Fidget_Pissed"
		5 : "Floor_Fidget_SmallRise"
		6 : "Floor_Fidget_Wave"
		7 : "Floor_Strike"
		8 : "Floor_Tap"
		9 : "Floor_Rotate"
		10 : "Floor_Rear"
		11 : "Floor_Rear_Idle"
		12 : "Floor_to_Lev1"
		13 : "Lev1_Idle"
		14 : "Lev1_Fidget_Claw"
		15 : "Lev1_Fidget_Shake"
		16 : "Lev1_Fidget_Snap"
		17 : "Lev1_Strike"
		18 : "Lev1_Tap"
		19 : "Lev1_Rotate"
		20 : "Lev1_Rear"
		21 : "Lev1_Rear_Idle"
		22 : "Lev1_to_Lev2"
		23 : "Lev2_Idle"
		24 : "Lev2_Fidget_Shake"
		25 : "Lev2_Fidget_Swing"
		26 : "Lev2_Fidget_Tut"
		27 : "Lev2_Strike"
		28 : "Lev2_Tap"
		29 : "Lev2_Rotate"
		30 : "Lev2_Rear"
		31 : "Lev2_Rear_Idle"
		32 : "Lev2_to_Lev3"
		33 : "Lev3_Idle"
		34 : "Lev3_Fidget_Shake"
		35 : "Lev3_Fidget_Side"
		36 : "Lev3_Fidget_Swipe"
		37 : "Lev3_Strike"
		38 : "Lev3_Tap"
		39 : "Lev3_Rotate"
		40 : "Lev3_Rear"
		41 : "Lev3_Rear_Idle"
		42 : "Lev1_Door_reach"
		43 : "Lev3_to_Engine"
		44 : "Engine_Idle"
		45 : "Engine_Sway"
		46 : "Engine_Swat"
		47 : "Engine_Bob"
		48 : "Engine_death1"
		49 : "Engine_death2"
		50 : "Engine_death3"
		51 : "tentacle_grab_idle"
		52 : "tentacle_grab"
	]
]
@PointClass base(Monster) = monster_tripmine : "Active Tripmine" 
[
	spawnflags(Flags) =
	[
		1 : "Instant On" : 1
	]
]
@PointClass base(Monster) size(-32 -32 -32, 32 32 32) studio("models/turret.mdl") = monster_turret : "Auto Turret"
[
	orientation(Choices) : "Orientation" : 0 =
	[
		0 : "Floor Mount"
		1 : "Ceiling Mount"
	]
	spawnflags(Flags) = 
	[
		32 : "Autostart" : 0
		64 : "Start Inactive" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle_off"
		1 : "fire"
		2 : "spin"
		3 : "deploy"
		4 : "retire"
		5 : "die"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/zombie.mdl") = monster_zombie : "Scientist Zombie" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "turnleft"
		2 : "turnright"
		3 : "flinchsmall"
		4 : "flinch"
		5 : "bigflinch"
		6 : "getup"
		7 : "falling"
		8 : "attack1"
		9 : "attack2"
		10 : "walk"
		11 : "laflinch"
		12 : "raflinch"
		13 : "llflinch"
		14 : "rlflinch"
		15 : "dieheadshot"
		16 : "dieheadshot2"
		17 : "diesimple"
		18 : "diebackward"
		19 : "dieforward"
		20 : "pause"
		21 : "busting_through_wall"
		22 : "kick_punch_wall"
		23 : "bust_window"
		24 : "soda"
		25 : "slideidle"
		26 : "slidewall"
		27 : "ventclimbidle"
		28 : "ventclimb"
		29 : "deadidle"
		30 : "deadwall"
		31 : "freakdie"
		32 : "freak"
		33 : "eatbodytable"
		34 : "eatbody"
		35 : "eatbodystand"
		36 : "ripdoor"
		37 : "zombie_pull_scientist"
		38 : "zombie_eating"
		39 : "eat_to_stand"
		40 : "vent_zidle"
		41 : "vent_c1a3"
		42 : "haulzombie"
		43 : "c2a3_snack_getup"
	]
]
@PointClass base(Targetname, Angles) size(-16 -16 -16, 16 16 16) = monstermaker : "Monster Maker"
[
	target(string) : "Target On Release" 
	monstertype(string) : "Monster Type"
	netname(string) : "Childrens' Name"
	spawnflags(Flags) = 
	[
		1 : "Start ON" 	: 0
	// 	2 : "PVS On/Off" : 0  // not implemented
		4 : "Cyclic" : 0
		8 : "MonsterClip" : 0
	]

	// how many monsters the monstermaker can create (-1 = unlimited)
	monstercount(integer) : "Monster count " : -1
	respawn_as_playerally(choices) : "Make Player Allys" :  0 =
	[
		0 : "NO"
		1 : "YES"
	]

	// if delay is -1, new monster will be made when last monster dies.
	// else, delay is how often (seconds) a new monster will be dookied out.
	delay(string) : "Frequency" : "5"

	// maximum number of live children allowed at one time. (New ones will not be made until one dies)
	// -1 no limit
	m_imaxlivechildren(integer) : "Max live children" : 5

	health(integer) : "Custom Health" : 0
]


@PointClass base(Targetname) color(255 128 0) = multi_manager : "MultiTarget Manager" 
[
	spawnflags(Flags) = 
	[
		1 : "multithreaded" : 0
	]
]

@PointClass base(Targetname, Target) color(128 255 128) = multisource : "Multisource"
[
	globalstate(string) : "Global State Master"
]

@PointClass base(Targetname, Angles) size(16 16 16) color(247 181 82) = path_corner : "Moving platform stop"
[
	spawnflags(Flags) =
	[
		1: "Wait for retrigger" : 0
		2: "Teleport" : 0
		4: "Fire once" : 0
	]
	target(target_destination) : "Next stop target"
	message(target_destination) : "Fire On Pass"
	wait(integer) : "Wait here (secs)" : 0
	speed(integer) : "New Train Speed" : 0
	yaw_speed(integer) : "New Train rot. Speed" : 0
]

@PointClass base(Targetname, Angles) size(16 16 16) = path_track : "Train Track Path"
[
	spawnflags(Flags) =
	[
		1: "Disabled" : 0
		2: "Fire once" : 0
		4: "Branch Reverse" : 0
		8: "Disable train" : 0
	]
	target(target_destination) : "Next stop target"
	message(target_destination) : "Fire On Pass"
	altpath(target_destination) : "Branch Path"
	netname(target_destination) : "Fire on dead end"
	speed(integer) : "New Train Speed" : 0
]

//
// player effects
//

@PointClass base(Targetname) size(-16 -16 -16, 16 16 16) = player_loadsaved : "Load Auto-Saved game" 
[
	duration(string) : "Fade Duration (seconds)" : "2"
	holdtime(string) : "Hold Fade (seconds)" : "0"
	renderamt(integer) : "Fade Alpha" : 255
	rendercolor(color255) : "Fade Color (R G B)" : "0 0 0"
	messagetime(string) : "Show Message delay" : "0"
	message(string) : "Message To Display" : ""
	loadtime(string) : "Reload delay" : "0"
]

@PointClass base(Targetname) size(-16 -16 -16, 16 16 16) = player_weaponstrip : "Strips player's weapons" []

@PointClass base(Targetname, Targetx) size(-16 -16 0, 16 16 72) color(255 0 255) = scripted_sentence : "Scripted Sentence"
[
	spawnflags(Flags) = 
	[
		1 : "Fire Once" 	: 1
		2 : "Followers Only"	: 0
		4 : "Interrupt Speech"	: 1
		8 : "Concurrent"	: 0
	]
	sentence(string) : "Sentence Name" : ""
	entity(string) : "Speaker Type"
	duration(string) : "Sentence Time" : "3"
	radius(integer) : "Search Radius" : 512
	refire(string) : "Delay Before Refire" : "3"
	listener(string) : "Listener Type"
	volume(string) : "Volume 0-10" : "10"
	attenuation(Choices) : "Sound Radius" : 0 =
	[
		0 : "Small Radius"
		1 : "Medium Radius"
		2 : "Large  Radius"
		3 : "Play Everywhere"
	]
]

@PointClass base(Targetname, Targetx, Angles) size(-16 -16 0, 16 16 72) color(255 0 255) = scripted_sequence : "Scripted Sequence"
[
	m_iszEntity(string) : "Target Monster"
	m_iszPlay(string) : "Action Animation" : ""
	m_iszIdle(string) : "Idle Animation" : ""
	m_flRadius(integer) : "Search Radius" : 512
	m_flRepeat(integer) : "Repeat Rate ms" : 0
	m_fMoveTo(choices) : "Move to Position" : 0 =
	[
		0 : "No"
		1 : "Walk"
		2 : "Run"
		4 : "Instantaneous"
		5 : "No - Turn to Face"
	]
	spawnflags(Flags) = 
	[
		4 : "Repeatable"	: 0
		8 : "Leave Corpse"	: 0
		32: "No Interruptions"	: 0
		64: "Override AI"	: 0
		128: "No Script Movement" : 0
	]
]

@PointClass iconsprite("sprites/speaker.spr") base(Targetname) = speaker : "Announcement Speaker"
[
	preset(choices) :"Announcement Presets" : 0 =
	[
		0: "None"
		1: "C1A0 Announcer"
		2: "C1A1 Announcer"
		3: "C1A2 Announcer"
		4: "C1A3 Announcer"
		5: "C1A4 Announcer"  
		6: "C2A1 Announcer"
		7: "C2A2 Announcer"
		// 8: "C2A3 Announcer"
		9: "C2A4 Announcer"
		// 10: "C2A5 Announcer"
		11: "C3A1 Announcer"
		12: "C3A2 Announcer"
	]
	message(string) : "Sentence Group Name"
	health(integer) : "Volume (10 = loudest)" : 5
	spawnflags(flags) =
	[
		1: "Start Silent" : 0
	]
]

@PointClass base(Targetname) = target_cdaudio : "CD Audio Target"
[
	health(choices) : "Track #" : -1 =
	[
		-1 : "Stop"
		1 : "Track 1"
		2 : "Track 2"
		3 : "Track 3"
		4 : "Track 4"
		5 : "Track 5"
		6 : "Track 6"
		7 : "Track 7"
		8 : "Track 8"
		9 : "Track 9"
		10 : "Track 10"
		11 : "Track 11"
		12 : "Track 12"
		13 : "Track 13"
		14 : "Track 14"
		15 : "Track 15"
		16 : "Track 16"
		17 : "Track 17"
		18 : "Track 18"
		19 : "Track 19"
		20 : "Track 20"
		21 : "Track 21"
		22 : "Track 22"
		23 : "Track 23"
		24 : "Track 24"
		25 : "Track 25"
		26 : "Track 26"
		27 : "Track 27"
		28 : "Track 28"
		29 : "Track 29"
		30 : "Track 30"
	]
	radius(string) : "Player Radius"
]

//
// Triggers
//


@PointClass base(Targetx) = trigger_auto : "AutoTrigger"
[
	spawnflags(Flags) =
	[
		1 : "Remove On fire" : 1
	]
	globalstate(string) : "Global State to Read"
	triggerstate(choices) : "Trigger State" : 0 = 
	[
		0 : "Off"
		1 : "On"
		2 : "Toggle"
	]
]

@SolidClass base(Targetname) = trigger_autosave : "AutoSave Trigger"
[
	master(string) : "Master" 
]

@PointClass base(Targetx, Targetname) = trigger_camera : "Trigger Camera" 
[
	wait(integer) : "Hold time" : 10
	moveto(string) : "Path Corner"
	spawnflags(flags) =
	[
		1: "Start At Player" : 1
		2: "Follow Player" : 1
		4: "Freeze Player" : 0
		8: "All Players" : 0
	]
	speed(string) : "Initial Speed" : "0"
	acceleration(string) : "Acceleration units/sec^2" : "500"
	deceleration(string) : "Stop Deceleration units/sec^2" : "500"
]

@SolidClass base(Targetname) = trigger_cdaudio : "Trigger CD Audio"
[
	health(choices) : "Track #" : -1 =
	[
		-1 : "Stop"
		1 : "Track 1"
		2 : "Track 2"
		3 : "Track 3"
		4 : "Track 4"
		5 : "Track 5"
		6 : "Track 6"
		7 : "Track 7"
		8 : "Track 8"
		9 : "Track 9"
		10 : "Track 10"
		11 : "Track 11"
		12 : "Track 12"
		13 : "Track 13"
		14 : "Track 14"
		15 : "Track 15"
		16 : "Track 16"
		17 : "Track 17"
		18 : "Track 18"
		19 : "Track 19"
		20 : "Track 20"
		21 : "Track 21"
		22 : "Track 22"
		23 : "Track 23"
		24 : "Track 24"
		25 : "Track 25"
		26 : "Track 26"
		27 : "Track 27"
		28 : "Track 28"
		29 : "Track 29"
		30 : "Track 30"
	]
]

@SolidClass = trigger_changelevel : "Trigger: Change level"
[
	targetname(string) : "Name"
	map(string) : "New map name"
	landmark(string) : "Landmark name"
	changetarget(target_destination) : "Change Target"
	changedelay(string) : "Delay before change target" : "0"
	spawnflags(flags) =
	[
		1: "No Intermission" : 0
		2: "USE Only" : 0
	]
]

@PointClass base(Targetx, Targetname) = trigger_changetarget : "Trigger Change Target"
[
	m_iszNewTarget(string) : "New Target"
]

@SolidClass base(Trigger, Targetname) = trigger_counter : "Trigger counter" 
[
	spawnflags(flags) = 
	[ 
		1 : "No Message" : 0 
	]
	master(string) : "Master" 
	count(integer) : "Count before activation" : 2
]

@SolidClass base(Targetname) = trigger_endsection : "EndSection Trigger"
[
	section(string) : "Section"
	spawnflags(flags) =
	[
		1: "USE Only" : 0
	]
]

@SolidClass base(Trigger) = trigger_gravity : "Trigger Gravity"
[
	gravity(integer) : "Gravity (0-1)" : 1
]

@SolidClass base(Targetname,Target) = trigger_hurt : "Trigger player hurt" 
[
	spawnflags(flags) = 
	[ 
		1: "Target Once" : 0 
		2: "Start Off" : 0
		8: "No clients" : 0
		16:"FireClientOnly" : 0
		32:"TouchClientOnly" : 0
	]
	master(string) : "Master" 
	dmg(integer) : "Damage" : 10
	delay(string) : "Delay before trigger" : "0"
	damagetype(choices) : "Damage Type" : 0 =
	[
		0 : "GENERIC"
		1 : "CRUSH"
		2 : "BULLET"
		4 : "SLASH"
		8 : "BURN"
		16 : "FREEZE"
		32 : "FALL"
		64 : "BLAST"
		128 : "CLUB"
		256 : "SHOCK"
		512 : "SONIC"
		1024 : "ENERGYBEAM"
		16384: "DROWN"
		32768 : "PARALYSE"
		65536 : "NERVEGAS"
		131072 : "POISON"
		262144 : "RADIATION"
		524288 : "DROWNRECOVER"
		1048576 : "CHEMICAL"
		2097152 : "SLOWBURN"
		4194304 : "SLOWFREEZE"
	]
]

@SolidClass base(Angles) = trigger_monsterjump : "Trigger monster jump" 
[
	master(string) : "Master" 
	speed(integer) : "Jump Speed" : 40
	height(integer) : "Jump Height" : 128
]

@SolidClass base(Trigger) = trigger_multiple : "Trigger: Activate multiple" 
[
	wait(integer) : "Delay before reset" : 10
]

@SolidClass base(Trigger) = trigger_once : "Trigger: Activate once" []

@SolidClass base(Trigger, Angles) = trigger_push : "Trigger player push"
[
	spawnflags(flags) = 
	[ 
		1: "Once Only" : 0 
		2: "Start Off" : 0
	]
	speed(integer) : "Speed of push" : 40
]

@PointClass base(Targetname, Targetx) = trigger_relay : "Trigger Relay"
[
	spawnflags(flags) =
	[
		1: "Remove On fire" : 0
	]
	triggerstate(choices) : "Trigger State" : 0 = 
	[
		0: "Off"
		1: "On"
		2: "Toggle"
	]
]

@SolidClass base(Trigger) = trigger_teleport : "Trigger teleport" []

@SolidClass base(Targetname) = trigger_transition : "Trigger: Select Transition Area" []

//
// weapons
//

@PointClass base(Weapon, Targetx) studio("models/w_crowbar.mdl") = weapon_crowbar : "Crowbar" []
@PointClass base(Weapon, Targetx) studio("models/w_9mmhandgun.mdl") = weapon_9mmhandgun : "9mm Handgun" []
@PointClass base(Weapon, Targetx) studio("models/w_357.mdl") = weapon_357 : "357 Handgun" []
@PointClass base(Weapon, Targetx) studio("models/w_9mmar.mdl") = weapon_9mmAR : "9mm Assault Rifle" []
@PointClass base(Weapon, Targetx) studio("models/w_shotgun.mdl") = weapon_shotgun : "Shotgun" []
@PointClass base(Weapon, Targetx) studio("models/w_rpg.mdl") = weapon_rpg : "RPG" 
[
	sequence(choices) : "Placement" : 0 =
	[
		0 : "Normal (flat)"
		1 : "Realistic (tilted)"
	]
]
@PointClass base(Weapon, Targetx) studio("models/w_gauss.mdl") = weapon_gauss : "Gauss Gun" 
[
	sequence(choices) : "Placement" : 0 =
	[
		0 : "Normal (flat)"
		1 : "Realistic (tilted)"
	]
]
@PointClass base(Weapon, Targetx) studio("models/w_crossbow.mdl") = weapon_crossbow : "Crossbow" 
[
	sequence(choices) : "Placement" : 0 =
	[
		0 : "Normal (flat)"
		1 : "Realistic (tilted)"
	]
]
@PointClass base(Weapon, Targetx) studio("models/w_egon.mdl") = weapon_egon : "Egon Gun" []
@PointClass base(Weapon, Targetx) size(-16 -16 -5, 16 16 27) = weapon_tripmine : "Tripmine Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_satchel.mdl") = weapon_satchel : "Satchel Charge Ammo" 
[
	sequence(choices) : "Placement" : 0 =
	[
		0 : "Normal (standing up)"
		1 : "Realistic (on back)"
	]
]
@PointClass base(Weapon, Targetx) studio("models/w_grenade.mdl") = weapon_handgrenade : "Handgrenade Ammo" []
@PointClass base(Weapon, Targetx) studio("models/w_squeak.mdl") = weapon_snark : "Squeak Grenade" []
@PointClass base(Weapon, Targetx) studio("models/w_hgun.mdl") = weapon_hornetgun : "Hornet Gun" []
@PointClass size(-16 -16 0, 16 16 64) color(0 128 0) studio("models/w_weaponbox.mdl") =  weaponbox : "Weapon/Ammo Container" []

@PointClass base(Weapon, Targetx) = world_items : "World Items" 
[
	type(choices) :"types" : 42 =
	[
		42: "Antidote"
		43: "Security Card"
		44: "Battery"
		45: "Suit"
	]
]

//
// Xen
//

@PointClass base(Target, Targetname, RenderFields, Angles) size(-48 -48 0, 48 48 32 ) studio("models/light.mdl") = xen_plantlight : "Xen Plant Light" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "retract"
		2 : "deploy"
		3 : "hide"
	]
]
@PointClass base(Targetname, RenderFields, Angles) size(-8 -8 0, 8 8 32 ) studio("models/hair.mdl") = xen_hair : "Xen Hair" 
[
	spawnflags(Flags) = 
	[
		1 : "Sync Movement" 	: 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "spin"
	]
]
@PointClass base(Targetname, RenderFields, Angles) size(-24 -24 0, 24 24 188 ) studio("models/tree.mdl") = xen_tree : "Xen Tree" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "attack"
	]
]
@PointClass base(Targetname, RenderFields, Angles) size(-16 -16 0, 16 16 64 ) studio("models/fungus(small).mdl") = xen_spore_small : "Xen Spore (small)" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
	]
]
@PointClass base(Targetname, RenderFields, Angles) size(-40 -40 0, 40 40 120 ) studio("models/fungus.mdl") = xen_spore_medium : "Xen Spore (medium)" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
	]
]
@PointClass base(Targetname, RenderFields, Angles) size(-90 -90 0, 90 90 220 ) studio("models/fungus(large).mdl") = xen_spore_large : "Xen Spore (large)" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
	]
]

//
//
// Sven Co-op 2.0 Final Entities (Unique only, not modified)
//
//

@PointClass size(-8 -8 -8,8 8 8 ) = custom_precache : "Custom Precache"
[
	model_1(string): "Model 1"
	model_2(string): "Model 2"
	model_3(string): "Model 3"
	model_4(string): "Model 4"
	model_5(string): "Model 5"
	model_6(string): "Model 6"
	model_7(string): "Model 7"
	model_8(string): "Model 8"
	model_9(string): "Model 9"

	sound_1(string): "Sound 1"
	sound_2(string): "Sound 2"
	sound_3(string): "Sound 3"
	sound_4(string): "Sound 4"
	sound_5(string): "Sound 5"
	sound_6(string): "Sound 6"
	sound_7(string): "Sound 7"
	sound_8(string): "Sound 8"
	sound_9(string): "Sound 9"
]

// xen portal - created for DaveJ
@PointClass base(Target, Targetname) size(-24 -24 -24,24 24 24) = env_xenmaker :"Xen Portal" 
[

	spawnflags(flags) =
	[
		1: "Try Once" : 0
		2: "No Spawn" : 0
	]

	monstertype(string) : "Monster Type" : "monster_headcrab"

	m_flBeamRadius(integer) : "Beam Radius (max)" : 255
	m_iBeamAlpha(integer) : "Beam Alpha" : 128
	m_iBeamCount(integer) : "Beam Count" : 8
	m_vBeamColor(color255) : "Beam Color" : "217 226 146"

	m_flLightRadius(integer) : "Light Radius" : 160
	m_vLightColor(color255) : "Light Color" : "39 209 137"

	m_flStartSpriteFramerate(integer) : "Sprite1 Framerate" : 12
	m_flStartSpriteScale(string) : "Sprite1 Scale" : "1.0"
	m_iStartSpriteAlpha(integer) : "Sprite1 Alpha" : 255
	m_vStartSpriteColor(color255) : "Sprite1 Color" : "65 209 61"

	m_flEndSpriteFramerate(integer) : "Sprite2 Framerate" : 12
	m_flEndSpriteScale(string) : "Sprite2 Scale" : "1.0"
	m_iEndSpriteAlpha(integer) : "Sprite2 Alpha" : 255
	m_vEndSpriteColor(color255) : "Sprite2 Color" : "159 240 214"
]

@PointClass base(Monster) size(-80 -80 0, 80 80 90) studio("models/voltigore.mdl") = monster_alien_voltigore : "Voltigore" 
[
	netname(string) : "Squad Name"
	spawnflags(Flags) =
	[
	32 : "SquadLeader" : 0
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "walk"
		3 : "run"
		4 : "turnl"
		5 : "turnr"
		6 : "mattack2"
		7 : "mattack3"
		8 : "victoryeat"
		9 : "victorysniff"
		10 : "distanceattack"
		11 : "flinch"
		12 : "flinch"
		13 : "dieforward"
		14 : "diesimple"
		15 : "diesideways"
	]
]
@PointClass base(Monster) size(-32 -32 0, 32 32 128) studio("models/babygarg.mdl") = monster_babygarg : "Baby Gargantua" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle3"
		1 : "idle2"
		2 : "idle1"
		3 : "idle4"
		4 : "walk"
		5 : "run"
		6 : "shootflames1"
		7 : "shootflames2"
		8 : "Attack"
		9 : "stomp"
		10 : "180left"
		11 : "180right"
		12 : "Flinchlight"
		13 : "Flinchheavy"
		14 : "die"
		15 : "bitehead"
		16 : "throwbody"
		17 : "smash"
		18 : "rollcar"
		19 : "kickcar"
		20 : "pushcar"
		21 : "bust"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/gonome.mdl") = monster_gonome : "Gonome" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "walk"
		1 : "runlong"
		2 : "runshort"
		3 : "idle1"
		4 : "idle2"
		5 : "victoryeat1"
		6 : "eat_loop"
		7 : "attack1"
		8 : "attack2"
		9 : "attack3"
		10 : "jump1"
		11 : "diebackward"
		12 : "dieforward"
		13 : "dieheadshot"
		14 : "dieheadshot"
		15 : "diesimple"
		16 : "big_flinch"
		17 : "small_flinch"
		18 : "flinch"
		19 : "dead_on_stomach"
		20 : "dead_on_back"
		21 : "dead_on_stomach1"
		22 : "dead_on_side"
		23 : "sohappy"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/hwgrunt.mdl") = monster_hwgrunt : "Heavy Weapons Grunt" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
		1 : "idle2"
		2 : "creeping_walk"
		3 : "turnl"
		4 : "turnr"
		5 : "attack"
		6 : "spinup"
		7 : "small_pain"
		8 : "small_pain2"
		9 : "die_backwards"
		10 : "die_crumple"
		11 : "die_violent"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/massn.mdl") = monster_male_assassin : "Male Assassin"
[
	netname(string) : "Squad Name"
	spawnflags(Flags) =
	[
		32 : "SquadLeader" : 0
	]
	head(Choices) : "Heads" : 0 =
	[
		-1 : "Random"
		0 : "Ski Mask White"
		1 : "Ski Mask Black"
		2 : "Night Goggles"
	]
	weapons(Choices) : "Weapons" : 3 =
	[
		1 : "9mmAR"
		3 : "9mmAR + HG"
		5 : "9mmAR + GL"
		8 : "Sniper Rifle"
		10 : "Sniper Rifle + HG"
		32 : "No Weapons"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "walk1"
		1 : "run"
		2 : "victorydance"
		3 : "cower"
		4 : "smflinch"
		5 : "launchgrenade"
		6 : "throwgrenade"
		7 : "idle1"
		8 : "idle2"
		9 : "combatidle"
		10 : "frontkick"
		11 : "frontkick"
		12 : "frontkick"
		13 : "crouching_idle"
		14 : "crouching_wait"
		15 : "crouching_mp5"
		16 : "standing_mp5"
		17 : "reloading_mp5"
		18 : "crouching_shotgun"
		19 : "standing_shotgun"
		20 : "reload_shotgun"
		21 : "crouching_m40a1"
		22 : "standing_m40a1"
		23 : "reload_m40a1"
		24 : "advance_signal"
		25 : "flank_signal"
		26 : "retreat_signal"
		27 : "drop_grenade"
		28 : "limpingwalk"
		29 : "limpingrun"
		30 : "strafeleft"
		31 : "straferight"
		32 : "dieback1"
		33 : "dieforward"
		34 : "diesimple"
		35 : "diebackwards"
		36 : "dieheadshot"
		37 : "diegutshot"
		38 : "barnacled1"
		39 : "barnacled2"
		40 : "barnacled3"
		41 : "barnacled4"
		42 : "dead_on_stomach"
		43 : "deadstomach"
		44 : "deadside"
		45 : "deadsitting"
		46 : "repel_jump"
		47 : "repel_repel"
		48 : "repel_shoot"
		49 : "repel_land"
		50 : "repel_die"
		51 : "working"
		52 : "standing"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/massn.mdl") = monster_assassin_repel : "Male Assassin (Repel)"
[
	sequence(Choices) : "Animation Sequence (editor)" : 46 =
	[
		46 : "repel_jump"
		47 : "repel_repel"
		48 : "repel_shoot"
		49 : "repel_land"
		50 : "repel_die"
	]
]
@PointClass base(Monster,TalkMonster) size(-16 -16 0, 16 16 72) studio("models/otis.mdl") = monster_otis : "Otis"
[
	bodystate(Choices) : "bodystate" : -1 =
	[
		-1 : "Random"
		0 : "Gun Holstered"
		1 : "Gun Drawn"
		3 : "Donut"
	]
	head(Choices) : "head" : -1 =
	[
		-1 : "Random"
		0 : "Bald Head"
		1 : "Head with hair"
	]
	suspicious(choices) : "Suspicious" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "idle4"
		4 : "walk"
		5 : "run"
		6 : "shootgun"
		7 : "shootgun2"
		8 : "draw"
		9 : "disarm"
		10 : "reload"
		11 : "turnleft"
		12 : "turnright"
		13 : "laflinch"
		14 : "raflinch"
		15 : "llflinch"
		16 : "rlflinch"
		17 : "smlflinch"
		18 : "cower_stand"
		19 : "locked_door"
		20 : "fall_loop"
		21 : "barn_wave"
		22 : "beat_grunt"
		23 : "beat_gruntidle"
		24 : "flashlight"
		25 : "diesimple"
		26 : "dieviolent"
		27 : "diegutshot"
		28 : "dieforward"
		29 : "diebackward"
		30 : "diecrump"
		31 : "barnaclehit"
		32 : "barnaclepull"
		33 : "barnaclecrunch"
		34 : "barnaclechew"
		35 : "lying_on_back"
		36 : "lying_on_side"
		37 : "lying_on_stomach"
		38 : "stuffed_in_vent"
		39 : "dead_sitting"
		40 : "standing_idle"
		41 : "cprbarney"
		42 : "cprbarneyrevive"
		43 : "barney_dragvent"
		44 : "dying_barney"
		45 : "dying_barneyidle"
		46 : "dying_friend"
		47 : "dying_friendidle"
		48 : "c1a3_bidle"
		49 : "intropush"
		50 : "fence"
		51 : "wave"
		52 : "unlatch"
		53 : "retina"
		54 : "relaxstand"
		55 : "trackswitch"
		56 : "pepsiswing"
		57 : "pepsipush"
		58 : "buttonpush"
		59 : "cowering"
		60 : "candygrab"
	]
]
@PointClass base(Targetname,Appearflags) size(-16 -16 0, 16 16 72) studio("models/otis.mdl") = monster_otis_dead : "Dead Otis" 
[
    pose(Choices) : "Pose" : 0 =
    [
        0 : "On back"
        1 : "On side"
        2 : "On stomach"
	  3 : "Stuffed in Vent"
	  4 : "Dead Sitting"
    ]
	sequence(Choices) : "Animation Sequence (editor)" : 36 =
	[
		35 : "lying_on_back"
		36 : "lying_on_side"
		37 : "lying_on_stomach"
		38 : "stuffed_in_vent"
		39 : "dead_sitting"
	]
]
@PointClass base(Monster) size(-24 -24 0, 24 24 32) studio("models/pit_drone.mdl") = monster_pitdrone : "Pit Drone" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle"
		1 : "idle"
		2 : "walk"
		3 : "gallop"
		4 : "run"
		5 : "jump"
		6 : "flinchs"
		7 : "flinchb"
		8 : "turnleft"
		9 : "turnright"
		10 : "bite"
		11 : "whip"
		12 : "range"
		13 : "eat"
		14 : "reload"
		15 : "die"
		16 : "die1"
		17 : "die2"
		18 : "jump_over_counter"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/rgrunt.mdl") = monster_robogrunt : "Robot Grunt" 
[
	spawnflags(Flags) =
	[
		32 : "SquadLeader" : 0
	]
	netname(string) : "Squad Name"
	weapons(Choices) : "Weapons" : 1 =
	[
		1 : "9mmAR"
		3 : "9mmAR + HG"
		5 : "9mmAR + GL"
		8 : "Shotgun"
		10 : "Shotgun + HG"
	]
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "walk1"
		1 : "run"
		2 : "victorydance"
		3 : "cower"
		4 : "smflinch"
		5 : "leftlegsmflinch"
		6 : "rightlegsmflinch"
		7 : "rightarmflinch"
		8 : "leftarmflinch"
		9 : "launchgrenade"
		10 : "throwgrenade"
		11 : "idle1"
		12 : "idle2"
		13 : "combatidle"
		14 : "frontkick"
		15 : "crouching_idle"
		16 : "crouching_wait"
		17 : "crouching_mp5"
		18 : "standing_mp5"
		19 : "reload_mp5"
		20 : "crouching_shotgun"
		21 : "standing_shotgun"
		22 : "reload_shotgun"
		23 : "advance_signal"
		24 : "flank_signal"
		25 : "retreat_signal"
		26 : "drop_grenade"
		27 : "limpingwalk"
		28 : "limpingrun"
		29 : "180L"
		30 : "180R"
		31 : "strafeleft"
		32 : "straferight"
		33 : "dieback1"
		34 : "dieforward"
		35 : "diesimple"
		36 : "diebackwards"
		37 : "dieheadshot"
		38 : "diegutshot"
		39 : "barnacled1"
		40 : "barnacled2"
		41 : "barnacled3"
		42 : "barnacled4"
		43 : "dead_on_stomach"
		44 : "deadstomach"
		45 : "deadside"
		46 : "deadsitting"
		47 : "repel_jump"
		48 : "repel_repel"
		49 : "repel_shoot"
		50 : "repel_land"
		51 : "repel_die"
		52 : "dragholeidle"
		53 : "draghole"
		54 : "bustwall"
		55 : "hoprail"
		56 : "converse1"
		57 : "converse2"
		58 : "startleleft"
		59 : "startleright"
		60 : "divecover"
		61 : "defuse"
		62 : "corner1"
		63 : "corner2"
		64 : "stonetoss"
		65 : "cliffdie"
		66 : "diveaside_idle"
		67 : "diveaside"
		68 : "kneeldive_idle"
		69 : "kneeldive"
		70 : "WM_button"
		71 : "WM_moatjump"
		72 : "bustwindow"
		73 : "dragleft"
		74 : "dragright"
		75 : "trackwave"
		76 : "trackdive"
		77 : "flyback"
		78 : "impaled"
		79 : "jumptracks"
		80 : "pipetoss"
		81 : "plunger"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/rgrunt.mdl") = monster_robogrunt_repel : "Robot Grunt"
[
	sequence(Choices) : "Animation Sequence (editor)" : 47 =
	[
		47 : "repel_jump"
		48 : "repel_repel"
		49 : "repel_shoot"
		50 : "repel_land"
		51 : "repel_die"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 36) studio("models/w_shock_rifle.mdl") = monster_shockroach : "Shock Roach" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "idle2"
		2 : "idle3"
		3 : "walk"
		4 : "run"
		5 : "angry"
		6 : "flinch"
		7 : "dieback"
		8 : "180_left"
		9 : "180_right"
		10 : "jump"
		11 : "jump_variation1"
		12 : "jump_variation2"
	]
]
@PointClass base(Monster) size(-24 -24 0, 24 24 32) studio("models/strooper.mdl") = monster_shocktrooper : "Shock Trooper" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "walk1"
		1 : "run"
		2 : "victorydance"
		3 : "cower"
		4 : "smflinch"
		5 : "leftlegsmflinchh"
		6 : "rightlegsmflinch"
		7 : "rightarmflinch"
		8 : "leftarmflinch"
		9 : "throwgrenade"
		10 : "idle1"
		11 : "idle2"
		12 : "combatidle"
		13 : "frontkick"
		14 : "crouching_idle"
		15 : "crouching_wait"
		16 : "crouching_mp5"
		17 : "standing_mp5"
		18 : "reload_mp5"
		19 : "advance_signal"
		20 : "flank_signal"
		21 : "retreat_signal"
		22 : "drop_grenade"
		23 : "limpingwalk"
		24 : "limpingrun"
		25 : "180L"
		26 : "180R"
		27 : "dieback1"
		28 : "dieforward"
		29 : "diesimple"
		30 : "diebackwards"
		31 : "dieheadshot"
		32 : "diegutshot"
		33 : "grab_scientist"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/zombie_barney.mdl") = monster_zombie_barney : "Barney Zombie" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "turnleft"
		2 : "turnright"
		3 : "flinchsmall"
		4 : "flinch"
		5 : "bigflinch"
		6 : "getup"
		7 : "falling"
		8 : "attack1"
		9 : "attack2"
		10 : "walk"
		11 : "laflinch"
		12 : "raflinch"
		13 : "llflinch"
		14 : "rlflinch"
		15 : "dieheadshot"
		16 : "dieheadshot2"
		17 : "diesimple"
		18 : "diebackward"
		19 : "dieforward"
		20 : "pause"
		21 : "busting_through_wall"
		22 : "kick_punch_wall"
		23 : "bust_window"
		24 : "soda"
		25 : "slideidle"
		26 : "slidewall"
		27 : "ventclimbidle"
		28 : "ventclimb"
		29 : "deadidle"
		30 : "deadwall"
		31 : "freakdie"
		32 : "freak"
		33 : "eatbodytable"
		34 : "eatbody"
		35 : "eatbodystand"
		36 : "ripdoor"
		37 : "zombie_pull_scientist"
		38 : "zombie_eating"
		39 : "eat_to_stand"
		40 : "vent_zidle"
		41 : "vent_c1a3"
		42 : "haulzombie"
		43 : "c2a3_snack_getup"
	]
]
@PointClass base(Monster) size(-16 -16 0, 16 16 72) studio("models/zombie_soldier.mdl") = monster_zombie_soldier : "Soldier Zombie" 
[
	sequence(Choices) : "Animation Sequence (editor)" : 0 =
	[
		0 : "idle1"
		1 : "turnleft"
		2 : "turnright"
		3 : "flinchsmall"
		4 : "flinch"
		5 : "bigflinch"
		6 : "getup"
		7 : "falling"
		8 : "attack1"
		9 : "attack2"
		10 : "walk"
		11 : "laflinch"
		12 : "raflinch"
		13 : "llflinch"
		14 : "rlflinch"
		15 : "dieheadshot"
		16 : "dieheadshot2"
		17 : "diesimple"
		18 : "diebackward"
		19 : "dieforward"
		20 : "dead_on_back"
		21 : "dead_on_stomach"
		22 : "throw_scientist"
		23 : "get_off_table"
		24 : "table_breath"
	]
]
@PointClass base(Targetname, Angles, RenderFields) size(-16 -16 -16, 16 16 16) = squadmaker : "Squad Maker"
[
	target(string) : "Target On Release" 
	monstertype(string) : "Monster Type"
	netname(string) : "Childrens' Name"
	spawnflags(Flags) = 
	[
		1 : "Start ON" 	: 0
	// 	2 : "PVS On/Off" : 0  // not implemented
		4 : "Cyclic" : 0
		8 : "MonsterClip" : 0
		16 : "Prisoner" : 0
		128 : "WaitForScript" : 0
	]

	// how many monsters the monstermaker can create (-1 = unlimited)
	monstercount(integer) : "Monster count " : -1
	respawn_as_playerally(choices) : "Make Player Allys" :  0 =
	[
		0 : "NO"
		1 : "YES"
	]

	// if delay is -1, new monster will be made when last monster dies.
	// else, delay is how often (seconds) a new monster will be dookied out.
	delay(string) : "Frequency" : "5"

	// maximum number of live children allowed at one time. (New ones will not be made until one dies)
	// -1 no limit
	m_imaxlivechildren(integer) : "Max live children" : 5

	weapons(Choices) : "Grunt/Assassin Weapons" : 1 =
	[
		1 : "9mmAR"
		3 : "9mmAR + HG"
		5 : "9mmAR + GL"
		8 : "Shotgun/Sniper Rifle"
		10 : "Shotgun/Sniper Rifle + HG"
		32 : "Melee (Massn only)"
	]

	change_rendermode(Choices) : "Override Render Mode" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	new_model(string) : "Model name" : ""
	new_body(integer) : "Body (-1 off)" : -1

	trigger_target(String) : "TriggerTarget"
      	trigger_condition(Choices) : "Trigger Condition" : 0 =
	[
		0 : "No Trigger"
		1 : "See Player, Mad at Player"
		2 : "Take Damage"
		3 : "50% Health Remaining"
		4 : "Death"
		7 : "Hear World"
		8 : "Hear Player"
		9 : "Hear Combat"
		10: "See Player Unconditional"
		11: "See Player, Not In Combat"
	]

	notsolid(Choices) : "Not Solid (-1 Monster Standard)" : -1 =
	[
		-1 : "Standard"
		0 : "No"
		1 : "Yes"
	]

	gag(Choices) : "Gag (-1 Monster Standard)" : -1 =
	[
		-1 : "Standard"
		0 : "No"
		1 : "Yes"
	]

	is_squad_leader(Choices) : "Squad Leader" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	squadname(String) : "Squadname" : ""
	health(integer) : "Custom Health" : 0

	wpn_v_model(String) : "v_model (Weapons Only)" : ""
	wpn_w_model(String) : "w_model (Weapons Only)" : ""
	wpn_p_model(String) : "p_model (Weapons Only)" : ""
]

@PointClass base(Targetname) = trigger_random : "Trigger Random"
[
	target_count(integer) : "Target Count" : 4
	target1(target_destination) : "Target1"
	target2(target_destination) : "Target2"
	target3(target_destination) : "Target3"
	target4(target_destination) : "Target4"
	target5(target_destination) : "Target5"
]

@PointClass base(Targetname) = trigger_random_time : "Trigger Random Time"
[
	spawnflags(Flags) =
	[
		1 : "Start On" : 0
		2 : "Trigger Once" : 0
	]
	target_count(integer) : "Target Count" : 4
	target1(target_destination) : "Target1"
	target2(target_destination) : "Target2"
	target3(target_destination) : "Target3"
	target4(target_destination) : "Target4"
	target5(target_destination) : "Target5"
	min_delay(string) : "Minimum Random Delay 0=off" : "3.0"
	max_delay(string) : "Maximum Random Delay 0=off" : "7.0"
]
// another1
// purpose: respawn all players without affecting the current player status, like health and weapons
@PointClass base(Target, Targetname) size(-16 -16 -16,16 16 16) = trigger_respawn :"Trigger Respawn" []
@PointClass base(Weapon, Targetx) studio("models/w_medkit.mdl") = weapon_medkit : "Medkit" []
@PointClass base(Weapon, Targetx) studio("models/w_pipe_wrench.mdl") = weapon_pipewrench : "Wrench" []
@PointClass base(Weapon, Targetx) studio("models/w_uzi.mdl") = weapon_uzi : "Single UZI (2 Uzis for Akimbo)" []
@PointClass base(Weapon, Targetx) studio("models/w_uzi.mdl") = weapon_uziakimbo : "Akimbo UZIs" []
